{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: 'YahooVerifier',\n  data() {\n    return {\n      token: null,\n      leagues: null\n    };\n  },\n  async created() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      try {\n        const response = await fetch('https://your_domain.com/auth/yahoo/callback?code=' + code);\n        const data = await response.json();\n        if (data.token) {\n          this.token = data.token;\n          this.leagues = data.leagues;\n\n          // Optionally, store the token in local storage\n          localStorage.setItem('access_token', this.token);\n        } else {\n          alert('Failed to authenticate with Yahoo');\n        }\n      } catch (error) {\n        console.error('Error during Yahoo verifier processing:', error);\n        alert('An error occurred during Yahoo verifier processing');\n      }\n    } else {\n      alert('No code found in URL');\n    }\n  }\n};","map":{"version":3,"names":["name","data","token","leagues","created","urlParams","URLSearchParams","window","location","search","code","get","response","fetch","json","localStorage","setItem","alert","error","console"],"sources":["/Users/navdeep/Documents/Github/mynbaassistant-FE/src/views/YahooVerifier.vue"],"sourcesContent":["<template>\n    <div class=\"verifier-form container-fluid\">\n      <h1>Verification Complete</h1>\n      <div v-if=\"leagues && leagues.length > 0\">\n        <h2>Your Leagues</h2>\n        <ul>\n          <li v-for=\"league in leagues\" :key=\"league\">{{ league }}</li>\n        </ul>\n      </div>\n      <div v-else>\n        <p>No leagues found or not authenticated yet.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'YahooVerifier',\n    data() {\n      return {\n        token: null,\n        leagues: null,\n      };\n    },\n    async created() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n  \n      if (code) {\n        try {\n          const response = await fetch('https://your_domain.com/auth/yahoo/callback?code=' + code);\n          const data = await response.json();\n  \n          if (data.token) {\n            this.token = data.token;\n            this.leagues = data.leagues;\n  \n            // Optionally, store the token in local storage\n            localStorage.setItem('access_token', this.token);\n          } else {\n            alert('Failed to authenticate with Yahoo');\n          }\n        } catch (error) {\n          console.error('Error during Yahoo verifier processing:', error);\n          alert('An error occurred during Yahoo verifier processing');\n        }\n      } else {\n        alert('No code found in URL');\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .verifier-form {\n    width: 100%;\n    padding: 0 15px;\n    background-color: #121212;\n    color: #e0e0e0;\n  }\n  </style>\n  "],"mappings":";;;AAgBE,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,SAAQ,GAAI,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,IAAG,GAAIL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;IAElC,IAAID,IAAI,EAAE;MACR,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,mDAAkD,GAAIH,IAAI,CAAC;QACxF,MAAMT,IAAG,GAAI,MAAMW,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,IAAIb,IAAI,CAACC,KAAK,EAAE;UACd,IAAI,CAACA,KAAI,GAAID,IAAI,CAACC,KAAK;UACvB,IAAI,CAACC,OAAM,GAAIF,IAAI,CAACE,OAAO;;UAE3B;UACAY,YAAY,CAACC,OAAO,CAAC,cAAc,EAAE,IAAI,CAACd,KAAK,CAAC;QAClD,OAAO;UACLe,KAAK,CAAC,mCAAmC,CAAC;QAC5C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/DD,KAAK,CAAC,oDAAoD,CAAC;MAC7D;IACF,OAAO;MACLA,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}