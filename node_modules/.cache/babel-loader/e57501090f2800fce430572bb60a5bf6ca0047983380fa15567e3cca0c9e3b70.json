{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Top 10 Players from Last Season\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table-wrapper\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Player ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Full Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Points\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Assists\"), /*#__PURE__*/_createCommentVNode(\" Add more columns for other stats as needed \")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topPlayers, player => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: player.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(player.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(player.full_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.playerStats[player.id].pts), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.playerStats[player.id].ast), 1 /* TEXT */), _createCommentVNode(\" Display other stats similarly \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","topPlayers","player","key","id","_toDisplayString","full_name","playerStats","pts","ast"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"home-page\">\n    <h2>Top 10 Players from Last Season</h2>\n    <div class=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            <th>Player ID</th>\n            <th>Full Name</th>\n            <th>Points</th>\n            <th>Assists</th>\n            <!-- Add more columns for other stats as needed -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"player in topPlayers\" :key=\"player.id\">\n            <td>{{ player.id }}</td>\n            <td>{{ player.full_name }}</td>\n            <td>{{ playerStats[player.id].pts }}</td>\n            <td>{{ playerStats[player.id].ast }}</td>\n            <!-- Display other stats similarly -->\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      topPlayers: [],\n      playerStats: {}  // Holds detailed stats for each player\n    };\n  },\n  created() {\n    this.fetchTopPlayers();\n  },\n  methods: {\n    async fetchTopPlayers() {\n      try {\n        const response = await axios.get('http://your_fastapi_server_ip:8000/api/players/top10lastseason');\n        this.topPlayers = response.data;\n        \n        // Fetch individual player stats\n        await Promise.all(this.topPlayers.map(player => this.fetchPlayerStats(player.id)));\n      } catch (error) {\n        console.error('Error fetching top players:', error);\n      }\n    },\n    async fetchPlayerStats(playerId) {\n      try {\n        const response = await axios.get(`http://your_fastapi_server_ip:8000/api/players/${playerId}/seasonstats`);\n        this.$set(this.playerStats, playerId, response.data);\n      } catch (error) {\n        console.error(`Error fetching stats for player ${playerId}:`, error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Add your styles as needed */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAwC,YAApC,iCAA+B;;EAC9BD,KAAK,EAAC;AAAe;gCAEtBC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXC,mBAAA,gDAAmD,C;;uBAV7DC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,UAAwC,EACxCJ,mBAAA,CAqBM,OArBNK,UAqBM,GApBJL,mBAAA,CAmBQ,gBAlBNM,UAQQ,EACRN,mBAAA,CAQQ,iB,kBAPNE,mBAAA,CAMKK,SAAA,QArBfC,WAAA,CAe+BC,KAAA,CAAAC,UAAU,EAApBC,MAAM;yBAAjBT,mBAAA,CAMK;MAN6BU,GAAG,EAAED,MAAM,CAACE;QAC5Cb,mBAAA,CAAwB,YAAAc,gBAAA,CAAjBH,MAAM,CAACE,EAAE,kBAChBb,mBAAA,CAA+B,YAAAc,gBAAA,CAAxBH,MAAM,CAACI,SAAS,kBACvBf,mBAAA,CAAyC,YAAAc,gBAAA,CAAlCL,KAAA,CAAAO,WAAW,CAACL,MAAM,CAACE,EAAE,EAAEI,GAAG,kBACjCjB,mBAAA,CAAyC,YAAAc,gBAAA,CAAlCL,KAAA,CAAAO,WAAW,CAACL,MAAM,CAACE,EAAE,EAAEK,GAAG,kBACjCjB,mBAAA,mCAAsC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}