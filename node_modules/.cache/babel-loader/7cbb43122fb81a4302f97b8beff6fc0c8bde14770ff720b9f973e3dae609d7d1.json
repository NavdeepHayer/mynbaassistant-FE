{"ast":null,"code":"import axios from 'axios';\nimport config from '@/config';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      activeTab: 'teams',\n      teams: [],\n      players: [],\n      searchQuery: '',\n      showDropdown: false,\n      selectedPlayer: null,\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      isFlipped: {},\n      selectedTeamPlayers: {},\n      selectedYear: new Date().getFullYear(),\n      draftHistory: [],\n      years: Array.from({\n        length: 15\n      }, (_, i) => new Date().getFullYear() - i),\n      selectedSeason: null,\n      seasons: [],\n      // List of seasons for the filter dropdown\n      page: 1,\n      limit: 10,\n      hasMoreData: true\n    };\n  },\n  async created() {\n    this.fetchTeams();\n    this.fetchPlayers();\n    this.fetchDraftHistory();\n    this.fetchSeasons();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/teams`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayers() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/players`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.players = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA players:', error);\n      }\n    },\n    async fetchPlayersByTeam(teamId) {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/teams/${teamId}/players`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayersByTeam(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    },\n    handleSearchInput() {\n      this.selectedPlayer = null; // Clear selected player data\n    },\n    async searchPlayers() {\n      try {\n        if (this.searchQuery.trim() === '') {\n          this.players = await axios.get(`${config.apiBaseUrl}/api/players`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n        } else {\n          const playerResponse = await axios.get(`${config.apiBaseUrl}/api/players/${this.searchQuery}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          this.players = playerResponse.data;\n        }\n        this.showDropdown = true;\n      } catch (error) {\n        this.players = [];\n        this.showDropdown = false;\n      }\n    },\n    async selectPlayer(player) {\n      this.selectedPlayer = player;\n      this.showDropdown = false;\n      this.page = 1;\n      await this.fetchPlayerData(player.id);\n    },\n    async fetchPlayerData(playerId) {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/players/${playerId}/games`, {\n          params: {\n            limit: this.limit,\n            offset: (this.page - 1) * this.limit\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.gameLogs = response.data;\n        this.hasMoreData = response.data.length === this.limit;\n        const seasonStatsResponse = await axios.get(`${config.apiBaseUrl}/api/players/${playerId}/seasonstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasonStats = seasonStatsResponse.data;\n        const playoffStatsResponse = await axios.get(`${config.apiBaseUrl}/api/players/${playerId}/playoffstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.playoffStats = playoffStatsResponse.data;\n      } catch (error) {\n        this.gameLogs = [];\n        this.seasonStats = [];\n        this.playoffStats = [];\n      }\n    },\n    async fetchDraftHistory() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/draft/${this.selectedYear}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.draftHistory = response.data;\n      } catch (error) {\n        console.error(`Error fetching draft history for year ${this.selectedYear}:`, error);\n        this.draftHistory = [];\n      }\n    },\n    async fetchSeasons() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/seasons`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasons = response.data;\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    },\n    filterGameLogs() {\n      if (this.selectedSeason) {\n        this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      } else {\n        this.filteredGameLogs = this.gameLogs;\n      }\n    },\n    nextPage() {\n      this.page += 1;\n      this.fetchPlayerData(this.selectedPlayer.id);\n    },\n    prevPage() {\n      if (this.page > 1) {\n        this.page -= 1;\n        this.fetchPlayerData(this.selectedPlayer.id);\n      }\n    },\n    hideDropdown() {\n      setTimeout(() => {\n        this.showDropdown = false;\n      }, 200);\n    }\n  },\n  computed: {\n    filteredGameLogs() {\n      return this.gameLogs.filter(log => log.min != null);\n    },\n    filteredSeasonStats() {\n      return this.seasonStats.filter(stat => stat.min != null);\n    },\n    filteredPlayoffStats() {\n      return this.playoffStats.filter(stat => stat.min != null);\n    },\n    filteredPlayers() {\n      if (this.searchQuery.trim() === '') {\n        return this.players;\n      }\n      return this.players.filter(player => player.full_name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  }\n};","map":{"version":3,"names":["axios","config","name","data","activeTab","teams","players","searchQuery","showDropdown","selectedPlayer","gameLogs","seasonStats","playoffStats","isFlipped","selectedTeamPlayers","selectedYear","Date","getFullYear","draftHistory","years","Array","from","length","_","i","selectedSeason","seasons","page","limit","hasMoreData","created","fetchTeams","fetchPlayers","fetchDraftHistory","fetchSeasons","methods","response","get","apiBaseUrl","headers","Authorization","localStorage","getItem","error","console","fetchPlayersByTeam","teamId","$set","toggleCard","handleSearchInput","searchPlayers","trim","playerResponse","selectPlayer","player","fetchPlayerData","id","playerId","params","offset","seasonStatsResponse","playoffStatsResponse","filterGameLogs","filteredGameLogs","filter","log","season_id","nextPage","prevPage","hideDropdown","setTimeout","computed","min","filteredSeasonStats","stat","filteredPlayoffStats","filteredPlayers","full_name","toLowerCase","includes"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"home-page container\">\n    <ul class=\"nav nav-tabs justify-content-center mt-4\">\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'teams' }\"\n          @click=\"activeTab = 'teams'\"\n          href=\"#\"\n        >\n          Teams\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'players' }\"\n          @click=\"activeTab = 'players'\"\n          href=\"#\"\n        >\n          Players\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'draft' }\"\n          @click=\"activeTab = 'draft'\"\n          href=\"#\"\n        >\n          Draft History\n        </a>\n      </li>\n    </ul>\n\n    <div v-if=\"activeTab === 'teams'\" class=\"tab-content mt-4\">\n      <h2 class=\"text-center my-4\">NBA Teams</h2>\n      <div class=\"row\">\n        <div v-for=\"team in teams\" :key=\"team.team_id\" class=\"col-md-4 mb-4\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ team.city }} {{ team.nickname }}</h5>\n              <p class=\"card-text\">{{ team.conference }} - {{ team.division }}</p>\n              <button class=\"btn btn-primary\" @click=\"toggleCard(team.team_id)\">\n                View Players\n              </button>\n              <div v-if=\"isFlipped[team.team_id]\" class=\"player-list mt-3\">\n                <ul>\n                  <li\n                    v-for=\"player in selectedTeamPlayers[team.team_id]\"\n                    :key=\"player.id\"\n                    @click=\"selectPlayer(player)\"\n                  >\n                    {{ player.full_name }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"activeTab === 'players'\" class=\"tab-content mt-4\">\n      <h2 class=\"text-center my-4\">NBA Players</h2>\n      <div class=\"player-search mt-4\">\n        <div class=\"input-group mb-3\">\n          <input\n            v-model=\"searchQuery\"\n            @input=\"handleSearchInput\"\n            @keyup.enter=\"searchPlayers\"\n            class=\"form-control\"\n            placeholder=\"Search for a player\"\n            @focus=\"showDropdown = true\"\n          />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" @click=\"searchPlayers\">\n              Search\n            </button>\n          </div>\n        </div>\n\n        <div class=\"row mt-4\">\n          <div v-for=\"player in filteredPlayers\" :key=\"player.id\" class=\"col-md-3 mb-4\">\n            <div class=\"card\" @click=\"selectPlayer(player)\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ player.full_name }}</h5>\n                <p class=\"card-text\">{{ player.first_name }} {{ player.last_name }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"selectedPlayer\" class=\"mt-4\">\n          <h2>{{ selectedPlayer.full_name }}</h2>\n          <ul class=\"nav nav-tabs mt-4\" id=\"gameLogTabs\" role=\"tablist\">\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link active\"\n                id=\"regular-season-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#regular-season\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"regular-season\"\n                aria-selected=\"true\"\n              >\n                Game Logs\n              </button>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link\"\n                id=\"season-stats-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#season-stats\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"season-stats\"\n                aria-selected=\"false\"\n              >\n                Season Stats\n              </button>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link\"\n                id=\"playoffs-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#playoffs\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"playoffs\"\n                aria-selected=\"false\"\n              >\n                Playoff Stats\n              </button>\n            </li>\n          </ul>\n          <div class=\"tab-content mt-2\" id=\"gameLogTabsContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"regular-season\"\n              role=\"tabpanel\"\n              aria-labelledby=\"regular-season-tab\"\n            >\n              <div class=\"table-responsive\">\n                <div class=\"filters mb-3\">\n                  <label for=\"seasonFilter\">Filter by Season:</label>\n                  <select\n                    id=\"seasonFilter\"\n                    class=\"form-control\"\n                    v-model=\"selectedSeason\"\n                    @change=\"filterGameLogs\"\n                  >\n                    <option v-for=\"season in seasons\" :key=\"season\" :value=\"season\">\n                      {{ season }}\n                    </option>\n                  </select>\n                </div>\n                <h3>Game Logs</h3>\n                <table class=\"table table-striped\">\n                  <thead class=\"thead-dark\">\n                    <tr>\n                      <th>Date</th>\n                      <th>Matchup</th>\n                      <th>WL</th>\n                      <th>MIN</th>\n                      <th>FGM</th>\n                      <th>FGA</th>\n                      <th>FG%</th>\n                      <th>3PM</th>\n                      <th>3PA</th>\n                      <th>3P%</th>\n                      <th>FTM</th>\n                      <th>FTA</th>\n                      <th>FT%</th>\n                      <th>REB</th>\n                      <th>AST</th>\n                      <th>STL</th>\n                      <th>BLK</th>\n                      <th>PTS</th>\n                      <th>+/-</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"log in filteredGameLogs\" :key=\"log.game_id\">\n                      <td>{{ log.game_date }}</td>\n                      <td>{{ log.matchup }}</td>\n                      <td>{{ log.wl }}</td>\n                      <td>{{ log.min }}</td>\n                      <td>{{ log.fgm }}</td>\n                      <td>{{ log.fga }}</td>\n                      <td>{{ log.fg_pct }}</td>\n                      <td>{{ log.fg3m }}</td>\n                      <td>{{ log.fg3a }}</td>\n                      <td>{{ log.fg3_pct }}</td>\n                      <td>{{ log.ftm }}</td>\n                      <td>{{ log.fta }}</td>\n                      <td>{{ log.ft_pct }}</td>\n                      <td>{{ log.reb }}</td>\n                      <td>{{ log.ast }}</td>\n                      <td>{{ log.stl }}</td>\n                      <td>{{ log.blk }}</td>\n                      <td>{{ log.pts }}</td>\n                      <td>{{ log.plus_minus }}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div class=\"pagination\">\n                <button @click=\"prevPage\" :disabled=\"page === 1\">Previous</button>\n                <span>Page {{ page }}</span>\n                <button @click=\"nextPage\" :disabled=\"!hasMoreData\">Next</button>\n              </div>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"season-stats\"\n              role=\"tabpanel\"\n              aria-labelledby=\"season-stats-tab\"\n            >\n              <div class=\"table-responsive\">\n                <h3>Season Stats</h3>\n                <table class=\"table table-striped\">\n                  <thead class=\"thead-dark\">\n                    <tr>\n                      <th>Season</th>\n                      <th>Team</th>\n                      <th>GP</th>\n                      <th>GS</th>\n                      <th>MIN</th>\n                      <th>FGM</th>\n                      <th>FGA</th>\n                      <th>FG%</th>\n                      <th>3PM</th>\n                      <th>3PA</th>\n                      <th>3P%</th>\n                      <th>FTM</th>\n                      <th>FTA</th>\n                      <th>FT%</th>\n                      <th>OREB</th>\n                      <th>DREB</th>\n                      <th>REB</th>\n                      <th>AST</th>\n                      <th>STL</th>\n                      <th>BLK</th>\n                      <th>TOV</th>\n                      <th>PF</th>\n                      <th>PTS</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"stat in filteredSeasonStats\" :key=\"stat.season_id\">\n                      <td>{{ stat.season_id }}</td>\n                      <td>{{ stat.team_id }}</td>\n                      <td>{{ stat.gp }}</td>\n                      <td>{{ stat.gs }}</td>\n                      <td>{{ stat.min }}</td>\n                      <td>{{ stat.fgm }}</td>\n                      <td>{{ stat.fga }}</td>\n                      <td>{{ stat.fg_pct }}</td>\n                      <td>{{ stat.fg3m }}</td>\n                      <td>{{ stat.fg3a }}</td>\n                      <td>{{ stat.fg3_pct }}</td>\n                      <td>{{ stat.ftm }}</td>\n                      <td>{{ stat.fta }}</td>\n                      <td>{{ stat.ft_pct }}</td>\n                      <td>{{ stat.oreb }}</td>\n                      <td>{{ stat.dreb }}</td>\n                      <td>{{ stat.reb }}</td>\n                      <td>{{ stat.ast }}</td>\n                      <td>{{ stat.stl }}</td>\n                      <td>{{ stat.blk }}</td>\n                      <td>{{ stat.tov }}</td>\n                      <td>{{ stat.pf }}</td>\n                      <td>{{ stat.pts }}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"playoffs\"\n              role=\"tabpanel\"\n              aria-labelledby=\"playoffs-tab\"\n            >\n              <div class=\"table-responsive\">\n                <h3>Playoff Stats</h3>\n                <table class=\"table table-striped\">\n                  <thead class=\"thead-dark\">\n                    <tr>\n                      <th>Season</th>\n                      <th>Team</th>\n                      <th>GP</th>\n                      <th>GS</th>\n                      <th>MIN</th>\n                      <th>FGM</th>\n                      <th>FGA</th>\n                      <th>FG%</th>\n                      <th>3PM</th>\n                      <th>3PA</th>\n                      <th>3P%</th>\n                      <th>FTM</th>\n                      <th>FTA</th>\n                      <th>FT%</th>\n                      <th>OREB</th>\n                      <th>DREB</th>\n                      <th>REB</th>\n                      <th>AST</th>\n                      <th>STL</th>\n                      <th>BLK</th>\n                      <th>TOV</th>\n                      <th>PF</th>\n                      <th>PTS</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"stat in filteredPlayoffStats\" :key=\"stat.season_id\">\n                      <td>{{ stat.season_id }}</td>\n                      <td>{{ stat.team_id }}</td>\n                      <td>{{ stat.gp }}</td>\n                      <td>{{ stat.gs }}</td>\n                      <td>{{ stat.min }}</td>\n                      <td>{{ stat.fgm }}</td>\n                      <td>{{ stat.fga }}</td>\n                      <td>{{ stat.fg_pct }}</td>\n                      <td>{{ stat.fg3m }}</td>\n                      <td>{{ stat.fg3a }}</td>\n                      <td>{{ stat.fg3_pct }}</td>\n                      <td>{{ stat.ftm }}</td>\n                      <td>{{ stat.fta }}</td>\n                      <td>{{ stat.ft_pct }}</td>\n                      <td>{{ stat.oreb }}</td>\n                      <td>{{ stat.dreb }}</td>\n                      <td>{{ stat.reb }}</td>\n                      <td>{{ stat.ast }}</td>\n                      <td>{{ stat.stl }}</td>\n                      <td>{{ stat.blk }}</td>\n                      <td>{{ stat.tov }}</td>\n                      <td>{{ stat.pf }}</td>\n                      <td>{{ stat.pts }}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"activeTab === 'draft'\" class=\"tab-content mt-4\">\n      <h2 class=\"text-center my-4\">Draft History</h2>\n      <div class=\"form-group\">\n        <label for=\"yearSelect\">Select Draft Year:</label>\n        <select id=\"yearSelect\" class=\"form-control\" v-model=\"selectedYear\" @change=\"fetchDraftHistory\">\n          <option v-for=\"year in years\" :key=\"year\" :value=\"year\">{{ year }}</option>\n        </select>\n      </div>\n      <div v-if=\"draftHistory.length > 0\" class=\"table-responsive mt-4\">\n        <h3>{{ selectedYear }} Draft</h3>\n        <table class=\"table table-striped\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th>Player Name</th>\n              <th>Draft Year</th>\n              <th>Round</th>\n              <th>Round Pick</th>\n              <th>Overall Pick</th>\n              <th>Team Name</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"record in draftHistory\" :key=\"record.overall_pick\">\n              <td>{{ record.player_name }}</td>\n              <td>{{ record.draft_year }}</td>\n              <td>{{ record.round }}</td>\n              <td>{{ record.round_pick }}</td>\n              <td>{{ record.overall_pick }}</td>\n              <td>{{ record.team_name }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div v-else class=\"mt-4\">\n        <p class=\"text-center\">No data available for the selected year.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport config from '@/config';\n\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      activeTab: 'teams',\n      teams: [],\n      players: [],\n      searchQuery: '',\n      showDropdown: false,\n      selectedPlayer: null,\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      isFlipped: {},\n      selectedTeamPlayers: {},\n      selectedYear: new Date().getFullYear(),\n      draftHistory: [],\n      years: Array.from({ length: 15 }, (_, i) => new Date().getFullYear() - i),\n      selectedSeason: null,\n      seasons: [], // List of seasons for the filter dropdown\n      page: 1,\n      limit: 10,\n      hasMoreData: true\n    };\n  },\n  async created() {\n    this.fetchTeams();\n    this.fetchPlayers();\n    this.fetchDraftHistory();\n    this.fetchSeasons();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/teams`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayers() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/players`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.players = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA players:', error);\n      }\n    },\n    async fetchPlayersByTeam(teamId) {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/teams/${teamId}/players`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayersByTeam(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    },\n    handleSearchInput() {\n      this.selectedPlayer = null; // Clear selected player data\n    },\n    async searchPlayers() {\n      try {\n        if (this.searchQuery.trim() === '') {\n          this.players = await axios.get(`${config.apiBaseUrl}/api/players`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n        } else {\n          const playerResponse = await axios.get(\n            `${config.apiBaseUrl}/api/players/${this.searchQuery}`, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n              }\n            }\n          );\n          this.players = playerResponse.data;\n        }\n        this.showDropdown = true;\n      } catch (error) {\n        this.players = [];\n        this.showDropdown = false;\n      }\n    },\n    async selectPlayer(player) {\n      this.selectedPlayer = player;\n      this.showDropdown = false;\n      this.page = 1;\n      await this.fetchPlayerData(player.id);\n    },\n    async fetchPlayerData(playerId) {\n      try {\n        const response = await axios.get(\n          `${config.apiBaseUrl}/api/players/${playerId}/games`, {\n            params: {\n              limit: this.limit,\n              offset: (this.page - 1) * this.limit\n            },\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          }\n        );\n        this.gameLogs = response.data;\n        this.hasMoreData = response.data.length === this.limit;\n\n        const seasonStatsResponse = await axios.get(\n          `${config.apiBaseUrl}/api/players/${playerId}/seasonstats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          }\n        );\n        this.seasonStats = seasonStatsResponse.data;\n\n        const playoffStatsResponse = await axios.get(\n          `${config.apiBaseUrl}/api/players/${playerId}/playoffstats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          }\n        );\n        this.playoffStats = playoffStatsResponse.data;\n      } catch (error) {\n        this.gameLogs = [];\n        this.seasonStats = [];\n        this.playoffStats = [];\n      }\n    },\n    async fetchDraftHistory() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/draft/${this.selectedYear}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.draftHistory = response.data;\n      } catch (error) {\n        console.error(`Error fetching draft history for year ${this.selectedYear}:`, error);\n        this.draftHistory = [];\n      }\n    },\n    async fetchSeasons() {\n      try {\n        const response = await axios.get(`${config.apiBaseUrl}/api/seasons`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasons = response.data;\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    },\n    filterGameLogs() {\n      if (this.selectedSeason) {\n        this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      } else {\n        this.filteredGameLogs = this.gameLogs;\n      }\n    },\n    nextPage() {\n      this.page += 1;\n      this.fetchPlayerData(this.selectedPlayer.id);\n    },\n    prevPage() {\n      if (this.page > 1) {\n        this.page -= 1;\n        this.fetchPlayerData(this.selectedPlayer.id);\n      }\n    },\n    hideDropdown() {\n      setTimeout(() => {\n        this.showDropdown = false;\n      }, 200);\n    }\n  },\n  computed: {\n    filteredGameLogs() {\n      return this.gameLogs.filter(log => log.min != null);\n    },\n    filteredSeasonStats() {\n      return this.seasonStats.filter(stat => stat.min != null);\n    },\n    filteredPlayoffStats() {\n      return this.playoffStats.filter(stat => stat.min != null);\n    },\n    filteredPlayers() {\n      if (this.searchQuery.trim() === '') {\n        return this.players;\n      }\n      return this.players.filter(player =>\n        player.full_name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    }\n  }\n};\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.nav-tabs {\n  margin-bottom: 20px;\n}\n\n.card {\n  width: 100%;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n}\n\n.card-title {\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.card-text,\n.card-body ul {\n  font-size: 1rem;\n  color: #666;\n}\n\n.player-list {\n  margin-top: 20px;\n}\n\n.player-list ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.player-list li {\n  margin-bottom: 10px;\n}\n\n.player-search {\n  position: relative;\n}\n\n.dropdown-menu {\n  display: block;\n}\n\n.filters {\n  margin-bottom: 20px;\n}\n\n.filters label {\n  margin-right: 10px;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.pagination button {\n  margin: 0 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}