{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    player: Object\n  },\n  data() {\n    return {\n      activeTab: 'gameLogs',\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      gameLogsPage: 1,\n      seasonStatsPage: 1,\n      playoffStatsPage: 1,\n      itemsPerPage: 20,\n      hasMoreGameLogs: true,\n      hasMoreSeasonStats: true,\n      hasMorePlayoffStats: true\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer) {\n          this.fetchGameLogs();\n          this.fetchSeasonStats();\n          this.fetchPlayoffStats();\n        }\n      }\n    }\n  },\n  methods: {\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      if (tab === 'gameLogs') {\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats') {\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats') {\n        this.fetchPlayoffStats();\n      }\n    },\n    async fetchGameLogs() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/games`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.gameLogsPage - 1) * this.itemsPerPage\n          }\n        });\n        this.gameLogs = response.data;\n        this.hasMoreGameLogs = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching game logs:', error);\n      }\n    },\n    async fetchSeasonStats() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/seasonstats`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.seasonStatsPage - 1) * this.itemsPerPage\n          }\n        });\n        this.seasonStats = response.data;\n        this.hasMoreSeasonStats = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching season stats:', error);\n      }\n    },\n    async fetchPlayoffStats() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/playoffstats`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.playoffStatsPage - 1) * this.itemsPerPage\n          }\n        });\n        this.playoffStats = response.data;\n        this.hasMorePlayoffStats = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching playoff stats:', error);\n      }\n    },\n    nextPage(tab) {\n      if (tab === 'gameLogs') {\n        this.gameLogsPage++;\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats') {\n        this.seasonStatsPage++;\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats') {\n        this.playoffStatsPage++;\n        this.fetchPlayoffStats();\n      }\n    },\n    prevPage(tab) {\n      if (tab === 'gameLogs' && this.gameLogsPage > 1) {\n        this.gameLogsPage--;\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats' && this.seasonStatsPage > 1) {\n        this.seasonStatsPage--;\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats' && this.playoffStatsPage > 1) {\n        this.playoffStatsPage--;\n        this.fetchPlayoffStats();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","player","Object","data","activeTab","gameLogs","seasonStats","playoffStats","gameLogsPage","seasonStatsPage","playoffStatsPage","itemsPerPage","hasMoreGameLogs","hasMoreSeasonStats","hasMorePlayoffStats","watch","immediate","handler","newPlayer","fetchGameLogs","fetchSeasonStats","fetchPlayoffStats","methods","setActiveTab","tab","response","get","id","params","limit","offset","length","error","console","nextPage","prevPage"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/PlayerDetails.vue"],"sourcesContent":["<template>\n  <div class=\"player-details\">\n    <h2>{{ player.full_name }}</h2>\n    <div class=\"player-info\">\n      <p><strong>First Name:</strong> {{ player.first_name }}</p>\n      <p><strong>Last Name:</strong> {{ player.last_name }}</p>\n      <p><strong>Active:</strong> {{ player.is_active ? 'Yes' : 'No' }}</p>\n    </div>\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'gameLogs' }\" @click=\"setActiveTab('gameLogs')\" href=\"#\">\n          Game Logs\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'seasonStats' }\" @click=\"setActiveTab('seasonStats')\" href=\"#\">\n          Season Stats\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'playoffStats' }\" @click=\"setActiveTab('playoffStats')\" href=\"#\">\n          Playoff Stats\n        </a>\n      </li>\n    </ul>\n    <div v-if=\"activeTab === 'gameLogs'\" class=\"tab-content mt-4\">\n      <div class=\"pagination-controls\">\n        <button @click=\"prevPage('gameLogs')\" :disabled=\"gameLogsPage === 1\" class=\"btn btn-secondary btn-sm\">Previous</button>\n        <span>Page {{ gameLogsPage }}</span>\n        <button @click=\"nextPage('gameLogs')\" :disabled=\"!hasMoreGameLogs\" class=\"btn btn-secondary btn-sm\">Next</button>\n      </div>\n      <table v-if=\"gameLogs.length\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Matchup</th>\n            <th>Points</th>\n            <th>Assists</th>\n            <th>Rebounds</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"log in gameLogs\" :key=\"log.game_id\">\n            <td>{{ log.game_date }}</td>\n            <td>{{ log.matchup }}</td>\n            <td>{{ log.pts }}</td>\n            <td>{{ log.ast }}</td>\n            <td>{{ log.reb }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-if=\"activeTab === 'seasonStats'\" class=\"tab-content mt-4\">\n      <div class=\"pagination-controls\">\n        <button @click=\"prevPage('seasonStats')\" :disabled=\"seasonStatsPage === 1\" class=\"btn btn-secondary btn-sm\">Previous</button>\n        <span>Page {{ seasonStatsPage }}</span>\n        <button @click=\"nextPage('seasonStats')\" :disabled=\"!hasMoreSeasonStats\" class=\"btn btn-secondary btn-sm\">Next</button>\n      </div>\n      <table v-if=\"seasonStats.length\">\n        <thead>\n          <tr>\n            <th>Season</th>\n            <th>Team</th>\n            <th>GP</th>\n            <th>GS</th>\n            <th>MIN</th>\n            <th>PTS</th>\n            <th>REB</th>\n            <th>AST</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"stat in seasonStats\" :key=\"stat.season_id\">\n            <td>{{ stat.season_id }}</td>\n            <td>{{ stat.team_abbreviation }}</td>\n            <td>{{ stat.games_played }}</td>\n            <td>{{ stat.games_started }}</td>\n            <td>{{ stat.minutes_per_game }}</td>\n            <td>{{ stat.points_per_game }}</td>\n            <td>{{ stat.rebounds_per_game }}</td>\n            <td>{{ stat.assists_per_game }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-if=\"activeTab === 'playoffStats'\" class=\"tab-content mt-4\">\n      <div class=\"pagination-controls\">\n        <button @click=\"prevPage('playoffStats')\" :disabled=\"playoffStatsPage === 1\" class=\"btn btn-secondary btn-sm\">Previous</button>\n        <span>Page {{ playoffStatsPage }}</span>\n        <button @click=\"nextPage('playoffStats')\" :disabled=\"!hasMorePlayoffStats\" class=\"btn btn-secondary btn-sm\">Next</button>\n      </div>\n      <table v-if=\"playoffStats.length\">\n        <thead>\n          <tr>\n            <th>Season</th>\n            <th>Team</th>\n            <th>GP</th>\n            <th>GS</th>\n            <th>MIN</th>\n            <th>PTS</th>\n            <th>REB</th>\n            <th>AST</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"stat in playoffStats\" :key=\"stat.season_id\">\n            <td>{{ stat.season_id }}</td>\n            <td>{{ stat.team_abbreviation }}</td>\n            <td>{{ stat.games_played }}</td>\n            <td>{{ stat.games_started }}</td>\n            <td>{{ stat.minutes_per_game }}</td>\n            <td>{{ stat.points_per_game }}</td>\n            <td>{{ stat.rebounds_per_game }}</td>\n            <td>{{ stat.assists_per_game }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    player: Object,\n  },\n  data() {\n    return {\n      activeTab: 'gameLogs',\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      gameLogsPage: 1,\n      seasonStatsPage: 1,\n      playoffStatsPage: 1,\n      itemsPerPage: 20,\n      hasMoreGameLogs: true,\n      hasMoreSeasonStats: true,\n      hasMorePlayoffStats: true,\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer) {\n          this.fetchGameLogs();\n          this.fetchSeasonStats();\n          this.fetchPlayoffStats();\n        }\n      },\n    },\n  },\n  methods: {\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      if (tab === 'gameLogs') {\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats') {\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats') {\n        this.fetchPlayoffStats();\n      }\n    },\n    async fetchGameLogs() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/games`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.gameLogsPage - 1) * this.itemsPerPage,\n          },\n        });\n        this.gameLogs = response.data;\n        this.hasMoreGameLogs = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching game logs:', error);\n      }\n    },\n    async fetchSeasonStats() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/seasonstats`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.seasonStatsPage - 1) * this.itemsPerPage,\n          },\n        });\n        this.seasonStats = response.data;\n        this.hasMoreSeasonStats = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching season stats:', error);\n      }\n    },\n    async fetchPlayoffStats() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/players/${this.player.id}/playoffstats`, {\n          params: {\n            limit: this.itemsPerPage,\n            offset: (this.playoffStatsPage - 1) * this.itemsPerPage,\n          },\n        });\n        this.playoffStats = response.data;\n        this.hasMorePlayoffStats = response.data.length === this.itemsPerPage;\n      } catch (error) {\n        console.error('Error fetching playoff stats:', error);\n      }\n    },\n    nextPage(tab) {\n      if (tab === 'gameLogs') {\n        this.gameLogsPage++;\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats') {\n        this.seasonStatsPage++;\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats') {\n        this.playoffStatsPage++;\n        this.fetchPlayoffStats();\n      }\n    },\n    prevPage(tab) {\n      if (tab === 'gameLogs' && this.gameLogsPage > 1) {\n        this.gameLogsPage--;\n        this.fetchGameLogs();\n      } else if (tab === 'seasonStats' && this.seasonStatsPage > 1) {\n        this.seasonStatsPage--;\n        this.fetchSeasonStats();\n      } else if (tab === 'playoffStats' && this.playoffStatsPage > 1) {\n        this.playoffStatsPage--;\n        this.fetchPlayoffStats();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.player-details {\n  padding: 20px;\n  color: #e0e0e0; /* Light text color */\n  background-color: #1a1a1a; /* Match the dark theme */\n  border-radius: 8px; /* Rounded corners for modern look */\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  color: #e0e0e0; /* Light text color */\n  background-color: #1a1a1a; /* Match the dark theme */\n}\n\nth, td {\n  padding: 10px;\n  border: 1px solid #444; /* Darker border for contrast */\n  text-align: left;\n}\n\nth {\n  background-color: #333; /* Dark header background */\n  color: #fff; /* White text for header */\n}\n\n.nav-tabs {\n  margin-bottom: 15px;\n}\n\n.nav-tabs .nav-link {\n  cursor: pointer;\n  color: #e0e0e0; /* Light text color */\n}\n\n.nav-tabs .nav-link.active {\n  background-color: #007bff;\n  color: #fff;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\n.pagination-controls button {\n  color: #fff; /* White text for buttons */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}