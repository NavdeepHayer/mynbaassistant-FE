{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      teams: [],\n      selectedTeamPlayers: {},\n      isFlipped: {}\n    };\n  },\n  created() {\n    this.fetchTeams();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/teams');\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayers(teamId) {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/teams/${teamId}/players`);\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayers(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","teams","selectedTeamPlayers","isFlipped","created","fetchTeams","methods","response","get","error","console","fetchPlayers","teamId","$set","toggleCard"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"home-page container\">\n    <h2 class=\"text-center my-4\">NBA Teams</h2>\n    <div class=\"row\">\n      <div v-for=\"team in teams\" :key=\"team.team_id\" class=\"col-md-4 mb-4\">\n        <div class=\"card-container\" @click=\"toggleCard(team.team_id)\">\n          <div :class=\"['card', { 'flipped': isFlipped[team.team_id] }]\">\n            <div class=\"front\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ team.city }} {{ team.nickname }}</h5>\n                <p class=\"card-text\">{{ team.conference }} - {{ team.division }}</p>\n              </div>\n            </div>\n            <div class=\"back\" v-if=\"selectedTeamPlayers[team.team_id]\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Players</h5>\n                <ul>\n                  <li v-for=\"player in selectedTeamPlayers[team.team_id]\" :key=\"player.id\">\n                    {{ player.full_name }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      teams: [],\n      selectedTeamPlayers: {},\n      isFlipped: {}\n    };\n  },\n  created() {\n    this.fetchTeams();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/teams');\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayers(teamId) {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/teams/${teamId}/players`);\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayers(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.card-container {\n  perspective: 1000px;\n}\n\n.card {\n  width: 100%;\n  height: 100%;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  position: relative;\n}\n\n.flipped {\n  transform: rotateY(180deg);\n}\n\n.card .front, .card .back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.card .back {\n  transform: rotateY(180deg);\n}\n\n.card-title {\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.card-text, .card-body ul {\n  font-size: 1rem;\n  color: #666;\n}\n</style>\n"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,mBAAmB,EAAE,CAAC,CAAC;MACvBC,SAAS,EAAE,CAAC;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAI,CAACP,KAAI,GAAIM,QAAQ,CAACP,IAAI;MAC5B,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAME,YAAYA,CAACC,MAAM,EAAE;MACzB,IAAI;QACF,MAAML,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,mCAAmCI,MAAM,UAAU,CAAC;QACrF,IAAI,CAACC,IAAI,CAAC,IAAI,CAACX,mBAAmB,EAAEU,MAAM,EAAEL,QAAQ,CAACP,IAAI,CAAC;MAC5D,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IACD,MAAMK,UAAUA,CAACF,MAAM,EAAE;MACvB,IAAI,CAAC,IAAI,CAACV,mBAAmB,CAACU,MAAM,CAAC,EAAE;QACrC,MAAM,IAAI,CAACD,YAAY,CAACC,MAAM,CAAC;MACjC;MACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAACV,SAAS,EAAES,MAAM,EAAE,CAAC,IAAI,CAACT,SAAS,CAACS,MAAM,CAAC,CAAC;IAC5D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}