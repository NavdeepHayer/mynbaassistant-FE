{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PlayerDetails',\n  props: {\n    player: Object\n  },\n  data() {\n    return {\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      selectedSeason: null,\n      seasons: []\n    };\n  },\n  async created() {\n    await this.fetchPlayerData(this.player.id);\n    await this.fetchSeasons();\n  },\n  methods: {\n    async fetchPlayerData(playerId) {\n      try {\n        const gameLogsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/games`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.gameLogs = gameLogsResponse.data;\n        const seasonStatsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/seasonstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasonStats = seasonStatsResponse.data;\n        const playoffStatsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/playoffstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.playoffStats = playoffStatsResponse.data;\n      } catch (error) {\n        this.gameLogs = [];\n        this.seasonStats = [];\n        this.playoffStats = [];\n      }\n    },\n    async fetchSeasons() {\n      try {\n        const response = await axios.get('http://192.168.50.157:8000/api/seasons', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasons = response.data;\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    },\n    filterGameLogs() {\n      if (this.selectedSeason) {\n        this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      } else {\n        this.filteredGameLogs = this.gameLogs;\n      }\n    }\n  },\n  computed: {\n    filteredGameLogs() {\n      return this.gameLogs.filter(log => log.min != null);\n    },\n    filteredSeasonStats() {\n      return this.seasonStats.filter(stat => stat.min != null);\n    },\n    filteredPlayoffStats() {\n      return this.playoffStats.filter(stat => stat.min != null);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","player","Object","data","gameLogs","seasonStats","playoffStats","selectedSeason","seasons","created","fetchPlayerData","id","fetchSeasons","methods","playerId","gameLogsResponse","get","headers","Authorization","localStorage","getItem","seasonStatsResponse","playoffStatsResponse","error","response","console","filterGameLogs","filteredGameLogs","filter","log","season_id","computed","min","filteredSeasonStats","stat","filteredPlayoffStats"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/PlayerDetails.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>{{ player.full_name }}</h2>\n      <ul class=\"nav nav-tabs mt-4\" id=\"gameLogTabs\" role=\"tablist\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <button\n            class=\"nav-link active\"\n            id=\"regular-season-tab\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#regular-season\"\n            type=\"button\"\n            role=\"tab\"\n            aria-controls=\"regular-season\"\n            aria-selected=\"true\"\n          >\n            Game Logs\n          </button>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <button\n            class=\"nav-link\"\n            id=\"season-stats-tab\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#season-stats\"\n            type=\"button\"\n            role=\"tab\"\n            aria-controls=\"season-stats\"\n            aria-selected=\"false\"\n          >\n            Season Stats\n          </button>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <button\n            class=\"nav-link\"\n            id=\"playoffs-tab\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#playoffs\"\n            type=\"button\"\n            role=\"tab\"\n            aria-controls=\"playoffs\"\n            aria-selected=\"false\"\n          >\n            Playoff Stats\n          </button>\n        </li>\n      </ul>\n      <div class=\"tab-content mt-2\" id=\"gameLogTabsContent\">\n        <div class=\"tab-pane fade show active\" id=\"regular-season\" role=\"tabpanel\" aria-labelledby=\"regular-season-tab\">\n          <div class=\"table-responsive\">\n            <div class=\"filters mb-3\">\n              <label for=\"seasonFilter\">Filter by Season:</label>\n              <select\n                id=\"seasonFilter\"\n                class=\"form-control\"\n                v-model=\"selectedSeason\"\n                @change=\"filterGameLogs\"\n              >\n                <option v-for=\"season in seasons\" :key=\"season\" :value=\"season\">\n                  {{ season }}\n                </option>\n              </select>\n            </div>\n            <h3>Game Logs</h3>\n            <table class=\"table table-striped\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th>Date</th>\n                  <th>Matchup</th>\n                  <th>WL</th>\n                  <th>MIN</th>\n                  <th>FGM</th>\n                  <th>FGA</th>\n                  <th>FG%</th>\n                  <th>3PM</th>\n                  <th>3PA</th>\n                  <th>3P%</th>\n                  <th>FTM</th>\n                  <th>FTA</th>\n                  <th>FT%</th>\n                  <th>REB</th>\n                  <th>AST</th>\n                  <th>STL</th>\n                  <th>BLK</th>\n                  <th>PTS</th>\n                  <th>+/-</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"log in filteredGameLogs\" :key=\"log.game_id\">\n                  <td>{{ log.game_date }}</td>\n                  <td>{{ log.matchup }}</td>\n                  <td>{{ log.wl }}</td>\n                  <td>{{ log.min }}</td>\n                  <td>{{ log.fgm }}</td>\n                  <td>{{ log.fga }}</td>\n                  <td>{{ log.fg_pct }}</td>\n                  <td>{{ log.fg3m }}</td>\n                  <td>{{ log.fg3a }}</td>\n                  <td>{{ log.fg3_pct }}</td>\n                  <td>{{ log.ftm }}</td>\n                  <td>{{ log.fta }}</td>\n                  <td>{{ log.ft_pct }}</td>\n                  <td>{{ log.reb }}</td>\n                  <td>{{ log.ast }}</td>\n                  <td>{{ log.stl }}</td>\n                  <td>{{ log.blk }}</td>\n                  <td>{{ log.pts }}</td>\n                  <td>{{ log.plus_minus }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"tab-pane fade\" id=\"season-stats\" role=\"tabpanel\" aria-labelledby=\"season-stats-tab\">\n          <div class=\"table-responsive\">\n            <h3>Season Stats</h3>\n            <table class=\"table table-striped\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th>Season</th>\n                  <th>Team</th>\n                  <th>GP</th>\n                  <th>GS</th>\n                  <th>MIN</th>\n                  <th>FGM</th>\n                  <th>FGA</th>\n                  <th>FG%</th>\n                  <th>3PM</th>\n                  <th>3PA</th>\n                  <th>3P%</th>\n                  <th>FTM</th>\n                  <th>FTA</th>\n                  <th>FT%</th>\n                  <th>OREB</th>\n                  <th>DREB</th>\n                  <th>REB</th>\n                  <th>AST</th>\n                  <th>STL</th>\n                  <th>BLK</th>\n                  <th>TOV</th>\n                  <th>PF</th>\n                  <th>PTS</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"stat in filteredSeasonStats\" :key=\"stat.season_id\">\n                  <td>{{ stat.season_id }}</td>\n                  <td>{{ stat.team_id }}</td>\n                  <td>{{ stat.gp }}</td>\n                  <td>{{ stat.gs }}</td>\n                  <td>{{ stat.min }}</td>\n                  <td>{{ stat.fgm }}</td>\n                  <td>{{ stat.fga }}</td>\n                  <td>{{ stat.fg_pct }}</td>\n                  <td>{{ stat.fg3m }}</td>\n                  <td>{{ stat.fg3a }}</td>\n                  <td>{{ stat.fg3_pct }}</td>\n                  <td>{{ stat.ftm }}</td>\n                  <td>{{ stat.fta }}</td>\n                  <td>{{ stat.ft_pct }}</td>\n                  <td>{{ stat.oreb }}</td>\n                  <td>{{ stat.dreb }}</td>\n                  <td>{{ stat.reb }}</td>\n                  <td>{{ stat.ast }}</td>\n                  <td>{{ stat.stl }}</td>\n                  <td>{{ stat.blk }}</td>\n                  <td>{{ stat.tov }}</td>\n                  <td>{{ stat.pf }}</td>\n                  <td>{{ stat.pts }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"tab-pane fade\" id=\"playoffs\" role=\"tabpanel\" aria-labelledby=\"playoffs-tab\">\n          <div class=\"table-responsive\">\n            <h3>Playoff Stats</h3>\n            <table class=\"table table-striped\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th>Season</th>\n                  <th>Team</th>\n                  <th>GP</th>\n                  <th>GS</th>\n                  <th>MIN</th>\n                  <th>FGM</th>\n                  <th>FGA</th>\n                  <th>FG%</th>\n                  <th>3PM</th>\n                  <th>3PA</th>\n                  <th>3P%</th>\n                  <th>FTM</th>\n                  <th>FTA</th>\n                  <th>FT%</th>\n                  <th>OREB</th>\n                  <th>DREB</th>\n                  <th>REB</th>\n                  <th>AST</th>\n                  <th>STL</th>\n                  <th>BLK</th>\n                  <th>TOV</th>\n                  <th>PF</th>\n                  <th>PTS</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"stat in filteredPlayoffStats\" :key=\"stat.season_id\">\n                  <td>{{ stat.season_id }}</td>\n                  <td>{{ stat.team_id }}</td>\n                  <td>{{ stat.gp }}</td>\n                  <td>{{ stat.gs }}</td>\n                  <td>{{ stat.min }}</td>\n                  <td>{{ stat.fgm }}</td>\n                  <td>{{ stat.fga }}</td>\n                  <td>{{ stat.fg_pct }}</td>\n                  <td>{{ stat.fg3m }}</td>\n                  <td>{{ stat.fg3a }}</td>\n                  <td>{{ stat.fg3_pct }}</td>\n                  <td>{{ stat.ftm }}</td>\n                  <td>{{ stat.fta }}</td>\n                  <td>{{ stat.ft_pct }}</td>\n                  <td>{{ stat.oreb }}</td>\n                  <td>{{ stat.dreb }}</td>\n                  <td>{{ stat.reb }}</td>\n                  <td>{{ stat.ast }}</td>\n                  <td>{{ stat.stl }}</td>\n                  <td>{{ stat.blk }}</td>\n                  <td>{{ stat.tov }}</td>\n                  <td>{{ stat.pf }}</td>\n                  <td>{{ stat.pts }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'PlayerDetails',\n    props: {\n      player: Object,\n    },\n    data() {\n      return {\n        gameLogs: [],\n        seasonStats: [],\n        playoffStats: [],\n        selectedSeason: null,\n        seasons: [],\n      };\n    },\n    async created() {\n      await this.fetchPlayerData(this.player.id);\n      await this.fetchSeasons();\n    },\n    methods: {\n      async fetchPlayerData(playerId) {\n        try {\n          const gameLogsResponse = await axios.get(\n            `http://192.168.50.157:8000/api/players/${playerId}/games`, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n              },\n            }\n          );\n          this.gameLogs = gameLogsResponse.data;\n  \n          const seasonStatsResponse = await axios.get(\n            `http://192.168.50.157:8000/api/players/${playerId}/seasonstats`, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n              },\n            }\n          );\n          this.seasonStats = seasonStatsResponse.data;\n  \n          const playoffStatsResponse = await axios.get(\n            `http://192.168.50.157:8000/api/players/${playerId}/playoffstats`, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n              },\n            }\n          );\n          this.playoffStats = playoffStatsResponse.data;\n        } catch (error) {\n          this.gameLogs = [];\n          this.seasonStats = [];\n          this.playoffStats = [];\n        }\n      },\n      async fetchSeasons() {\n        try {\n          const response = await axios.get('http://192.168.50.157:8000/api/seasons', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          this.seasons = response.data;\n        } catch (error) {\n          console.error('Error fetching seasons:', error);\n        }\n      },\n      filterGameLogs() {\n        if (this.selectedSeason) {\n          this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n        } else {\n          this.filteredGameLogs = this.gameLogs;\n        }\n      },\n    },\n    computed: {\n      filteredGameLogs() {\n        return this.gameLogs.filter(log => log.min != null);\n      },\n      filteredSeasonStats() {\n        return this.seasonStats.filter(stat => stat.min != null);\n      },\n      filteredPlayoffStats() {\n        return this.playoffStats.filter(stat => stat.min != null);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .table-responsive {\n    max-width: 100%;\n  }\n  \n  .filters {\n    margin-bottom: 20px;\n  }\n  \n  .filters label {\n    margin-right: 10px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}