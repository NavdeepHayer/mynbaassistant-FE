{"ast":null,"code":"import axios from 'axios';\nimport PlayerDetails from './PlayerDetails.vue';\nexport default {\n  name: 'PlayersTab',\n  components: {\n    PlayerDetails\n  },\n  data() {\n    return {\n      players: [],\n      searchQuery: '',\n      selectedPlayer: null,\n      currentPage: 1,\n      itemsPerPage: 20\n    };\n  },\n  computed: {\n    paginatedPlayers() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.players.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.players.length / this.itemsPerPage);\n    }\n  },\n  async created() {\n    await this.fetchPlayers();\n    if (this.players.length > 0) {\n      this.selectPlayer(this.players[0]);\n    }\n  },\n  methods: {\n    async fetchPlayers() {\n      try {\n        const response = await axios.get('http://192.168.50.157:8000/api/players', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.players = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA players:', error);\n      }\n    },\n    handleSearchInput() {\n      this.currentPage = 1;\n      this.selectedPlayer = null;\n    },\n    searchPlayers() {\n      this.currentPage = 1;\n      this.selectedPlayer = this.paginatedPlayers[0];\n    },\n    selectPlayer(player) {\n      this.selectedPlayer = player;\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","PlayerDetails","name","components","data","players","searchQuery","selectedPlayer","currentPage","itemsPerPage","computed","paginatedPlayers","start","end","slice","totalPages","Math","ceil","length","created","fetchPlayers","selectPlayer","methods","response","get","headers","Authorization","localStorage","getItem","error","console","handleSearchInput","searchPlayers","player","previousPage","nextPage"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/ PlayersTab.vue"],"sourcesContent":["<template>\n  <div class=\"players-tab container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-3 search-results-container\">\n        <div class=\"search-section\">\n          <input\n            type=\"text\"\n            v-model=\"searchQuery\"\n            @input=\"handleSearchInput\"\n            @keyup.enter=\"searchPlayers\"\n            class=\"form-control\"\n            placeholder=\"Search for a player\"\n          />\n          <button class=\"btn btn-outline-secondary mt-2\" @click=\"searchPlayers\">Search</button>\n        </div>\n        <div class=\"pagination-controls\">\n          <button class=\"btn btn-secondary btn-sm\" @click=\"previousPage\" :disabled=\"currentPage === 1\">Previous</button>\n          <span class=\"mx-2\">Page {{ currentPage }} of {{ totalPages }}</span>\n          <button class=\"btn btn-secondary btn-sm\" @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n        </div>\n        <ul class=\"list-group\">\n          <li\n            v-for=\"player in paginatedPlayers\"\n            :key=\"player.id\"\n            class=\"list-group-item list-group-item-dark\"\n            @click=\"selectPlayer(player)\"\n            :class=\"{ active: selectedPlayer && selectedPlayer.id === player.id }\"\n          >\n            {{ player.full_name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-9 player-details-container\">\n        <PlayerDetails :player=\"selectedPlayer\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PlayerDetails from './PlayerDetails.vue';\n\nexport default {\n  name: 'PlayersTab',\n  components: {\n    PlayerDetails,\n  },\n  data() {\n    return {\n      players: [],\n      searchQuery: '',\n      selectedPlayer: null,\n      currentPage: 1,\n      itemsPerPage: 20,\n    };\n  },\n  computed: {\n    paginatedPlayers() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.players.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.players.length / this.itemsPerPage);\n    },\n  },\n  async created() {\n    await this.fetchPlayers();\n    if (this.players.length > 0) {\n      this.selectPlayer(this.players[0]);\n    }\n  },\n  methods: {\n    async fetchPlayers() {\n      try {\n        const response = await axios.get('http://192.168.50.157:8000/api/players', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.players = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA players:', error);\n      }\n    },\n    handleSearchInput() {\n      this.currentPage = 1;\n      this.selectedPlayer = null;\n    },\n    searchPlayers() {\n      this.currentPage = 1;\n      this.selectedPlayer = this.paginatedPlayers[0];\n    },\n    selectPlayer(player) {\n      this.selectedPlayer = player;\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.players-tab {\n  background-color: #1a1a1a;\n  color: #fff;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.search-results-container {\n  height: 100%;\n  padding-right: 0.5rem;\n  background-color: #333;\n  display: flex;\n  flex-direction: column;\n}\n\n.search-section {\n  padding: 10px;\n  background-color: #444;\n}\n\n.pagination-controls {\n  padding: 10px;\n  background-color: #444;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.list-group {\n  flex: 1;\n  overflow-y: auto;\n}\n\n.list-group-item {\n  cursor: pointer;\n}\n\n.list-group-item.active {\n  background-color: #007bff;\n  border-color: #007bff;\n}\n\n.player-details-container {\n  padding-left: 0.5rem;\n  height: 100%;\n  overflow-y: auto;\n}\n\nh2 {\n  color: #fff;\n}\n</style>\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,aAAY,MAAO,qBAAqB;AAE/C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACJ,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMI,GAAE,GAAID,KAAI,GAAI,IAAI,CAACH,YAAY;MACrC,OAAO,IAAI,CAACJ,OAAO,CAACS,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACvC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACa,MAAK,GAAI,IAAI,CAACT,YAAY,CAAC;IAC3D;EACF,CAAC;EACD,MAAMU,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;IACzB,IAAI,IAAI,CAACf,OAAO,CAACa,MAAK,GAAI,CAAC,EAAE;MAC3B,IAAI,CAACG,YAAY,CAAC,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC;EACF,CAAC;EACDiB,OAAO,EAAE;IACP,MAAMF,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QACF,IAAI,CAACvB,OAAM,GAAIkB,QAAQ,CAACnB,IAAI;MAC9B,EAAE,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDE,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACvB,WAAU,GAAI,CAAC;MACpB,IAAI,CAACD,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDyB,aAAaA,CAAA,EAAG;MACd,IAAI,CAACxB,WAAU,GAAI,CAAC;MACpB,IAAI,CAACD,cAAa,GAAI,IAAI,CAACI,gBAAgB,CAAC,CAAC,CAAC;IAChD,CAAC;IACDU,YAAYA,CAACY,MAAM,EAAE;MACnB,IAAI,CAAC1B,cAAa,GAAI0B,MAAM;IAC9B,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC1B,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACD2B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC3B,WAAU,GAAI,IAAI,CAACO,UAAU,EAAE;QACtC,IAAI,CAACP,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}