{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5f2e568e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center my-4\"\n}, \"NBA Teams\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"card\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card-title\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"player-list mt-3\"\n};\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.teams, team => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: team.team_id,\n      class: \"col-md-4 mb-4\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", _hoisted_5, _toDisplayString(team.city) + \" \" + _toDisplayString(team.nickname), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(team.conference) + \" - \" + _toDisplayString(team.division), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.toggleCard(team.team_id)\n    }, \" View Players \", 8 /* PROPS */, _hoisted_7), $data.isFlipped[team.team_id] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedTeamPlayers[team.team_id], player => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: player.id,\n        onClick: $event => _ctx.selectPlayer(player)\n      }, _toDisplayString(player.full_name), 9 /* TEXT, PROPS */, _hoisted_9);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","teams","team","team_id","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","city","nickname","_hoisted_6","conference","division","onClick","$event","$options","toggleCard","_hoisted_7","isFlipped","_hoisted_8","selectedTeamPlayers","player","id","_ctx","selectPlayer","full_name","_hoisted_9","_createCommentVNode"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/TeamsTab.vue"],"sourcesContent":["<template>\n    <div>\n      <h2 class=\"text-center my-4\">NBA Teams</h2>\n      <div class=\"row\">\n        <div v-for=\"team in teams\" :key=\"team.team_id\" class=\"col-md-4 mb-4\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ team.city }} {{ team.nickname }}</h5>\n              <p class=\"card-text\">{{ team.conference }} - {{ team.division }}</p>\n              <button class=\"btn btn-primary\" @click=\"toggleCard(team.team_id)\">\n                View Players\n              </button>\n              <div v-if=\"isFlipped[team.team_id]\" class=\"player-list mt-3\">\n                <ul>\n                  <li\n                    v-for=\"player in selectedTeamPlayers[team.team_id]\"\n                    :key=\"player.id\"\n                    @click=\"selectPlayer(player)\"\n                  >\n                    {{ player.full_name }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'TeamsTab',\n    data() {\n      return {\n        teams: [],\n        isFlipped: {},\n        selectedTeamPlayers: {},\n      };\n    },\n    async created() {\n      this.fetchTeams();\n    },\n    methods: {\n      async fetchTeams() {\n        try {\n          const response = await axios.get('http://192.168.50.157:8000/api/teams', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          this.teams = response.data;\n        } catch (error) {\n          console.error('Error fetching NBA teams:', error);\n        }\n      },\n      async fetchPlayersByTeam(teamId) {\n        try {\n          const response = await axios.get(`http://192.168.50.157:8000/api/teams/${teamId}/players`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          this.$set(this.selectedTeamPlayers, teamId, response.data);\n        } catch (error) {\n          console.error('Error fetching players for the team:', error);\n        }\n      },\n      async toggleCard(teamId) {\n        if (!this.selectedTeamPlayers[teamId]) {\n          await this.fetchPlayersByTeam(teamId);\n        }\n        this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .card {\n    width: 100%;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n  }\n  \n  .card-title {\n    font-size: 1.25rem;\n    font-weight: 500;\n  }\n  \n  .card-text,\n  .card-body ul {\n    font-size: 1rem;\n    color: #666;\n  }\n  \n  .player-list {\n    margin-top: 20px;\n  }\n  \n  .player-list ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  .player-list li {\n    margin-bottom: 10px;\n  }\n  </style>\n  "],"mappings":";;gEAEMA,mBAAA,CAA2C;EAAvCC,KAAK,EAAC;AAAkB,GAAC,WAAS;;EACjCA,KAAK,EAAC;AAAK;;EAEPA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;mBARlC;;EAAAC,GAAA;EAYkDD,KAAK,EAAC;;mBAZxD;;uBACIE,mBAAA,CA0BM,cAzBJC,UAA2C,EAC3CJ,mBAAA,CAuBM,OAvBNK,UAuBM,I,kBAtBJF,mBAAA,CAqBMG,SAAA,QAzBdC,WAAA,CAI4BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBP,mBAAA,CAqBM;MArBsBD,GAAG,EAAEQ,IAAI,CAACC,OAAO;MAAEV,KAAK,EAAC;QACnDD,mBAAA,CAmBM,OAnBNY,UAmBM,GAlBJZ,mBAAA,CAiBM,OAjBNa,UAiBM,GAhBJb,mBAAA,CAA+D,MAA/Dc,UAA+D,EAAAC,gBAAA,CAArCL,IAAI,CAACM,IAAI,IAAG,GAAC,GAAAD,gBAAA,CAAGL,IAAI,CAACO,QAAQ,kBACvDjB,mBAAA,CAAoE,KAApEkB,UAAoE,EAAAH,gBAAA,CAA5CL,IAAI,CAACS,UAAU,IAAG,KAAG,GAAAJ,gBAAA,CAAGL,IAAI,CAACU,QAAQ,kBAC7DpB,mBAAA,CAES;MAFDC,KAAK,EAAC,iBAAiB;MAAEoB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACd,IAAI,CAACC,OAAO;OAAG,gBAElE,iBAXdc,UAAA,GAYyBjB,KAAA,CAAAkB,SAAS,CAAChB,IAAI,CAACC,OAAO,K,cAAjCR,mBAAA,CAUM,OAVNwB,UAUM,GATJ3B,mBAAA,CAQK,c,kBAPHG,mBAAA,CAMKG,SAAA,QApBvBC,WAAA,CAeqCC,KAAA,CAAAoB,mBAAmB,CAAClB,IAAI,CAACC,OAAO,GAA1CkB,MAAM;2BADf1B,mBAAA,CAMK;QAJFD,GAAG,EAAE2B,MAAM,CAACC,EAAE;QACdT,OAAK,EAAAC,MAAA,IAAES,IAAA,CAAAC,YAAY,CAACH,MAAM;0BAExBA,MAAM,CAACI,SAAS,wBAnBvCC,UAAA;0CAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}