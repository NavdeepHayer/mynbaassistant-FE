{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/HomePage.vue';\nimport Search from '../views/SearchPlayerPage.vue';\nimport Teams from '../views/TeamsPage.vue';\nimport About from '../views/AboutPage.vue';\nimport AuthPage from '../views/AuthPage.vue';\nconst routes = [{\n  path: '/home',\n  name: 'Home',\n  component: Home,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/search',\n  name: 'Search',\n  component: Search,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/teams',\n  name: 'Teams',\n  component: Teams,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/about',\n  name: 'About',\n  component: About,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/',\n  name: 'AuthPage',\n  component: AuthPage\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next('/');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Search","Teams","About","AuthPage","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/HomePage.vue';\nimport Search from '../views/SearchPlayerPage.vue';\nimport Teams from '../views/TeamsPage.vue';\nimport About from '../views/AboutPage.vue';\nimport AuthPage from '../views/AuthPage.vue';\n\nconst routes = [\n  {\n    path: '/home',\n    name: 'Home',\n    component: Home,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/search',\n    name: 'Search',\n    component: Search,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/teams',\n    name: 'Teams',\n    component: Teams,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/about',\n    name: 'About',\n    component: About,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/',\n    name: 'AuthPage',\n    component: AuthPage,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next('/');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER,IAAI;EACfS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP,MAAM;EACjBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,KAAK;EAChBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,KAAK;EAChBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAACc,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACU,KAAK,EAAE;MACVD,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}