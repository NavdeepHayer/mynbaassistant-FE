{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5f2e568e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"teams-tab container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center my-4\"\n}, \"NBA Teams\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"card bg-dark text-white\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"player-list mt-3\"\n};\nconst _hoisted_10 = {\n  class: \"list-group\"\n};\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.teams, team => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: team.team_id,\n      class: \"col-md-4 mb-4\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h5\", _hoisted_6, _toDisplayString(team.city) + \" \" + _toDisplayString(team.nickname), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(team.conference) + \" - \" + _toDisplayString(team.division), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.toggleCard(team.team_id)\n    }, \" View Players \", 8 /* PROPS */, _hoisted_8), $data.isFlipped[team.team_id] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"ul\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedTeamPlayers[team.team_id], player => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: player.id,\n        onClick: $event => $options.selectPlayer(player),\n        class: \"list-group-item list-group-item-action\"\n      }, _toDisplayString(player.full_name), 9 /* TEXT, PROPS */, _hoisted_11);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","teams","team","team_id","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","city","nickname","_hoisted_7","conference","division","onClick","$event","$options","toggleCard","_hoisted_8","isFlipped","_hoisted_9","_hoisted_10","selectedTeamPlayers","player","id","selectPlayer","full_name","_hoisted_11","_createCommentVNode"],"sources":["/home/nav/Documents/GitHub/mynbaassistant-FE/src/views/TeamsTab.vue"],"sourcesContent":["\n<template>\n  <div class=\"teams-tab container\">\n    <h2 class=\"text-center my-4\">NBA Teams</h2>\n    <div class=\"row\">\n      <div v-for=\"team in teams\" :key=\"team.team_id\" class=\"col-md-4 mb-4\">\n        <div class=\"card bg-dark text-white\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ team.city }} {{ team.nickname }}</h5>\n            <p class=\"card-text\">{{ team.conference }} - {{ team.division }}</p>\n            <button class=\"btn btn-primary\" @click=\"toggleCard(team.team_id)\">\n              View Players\n            </button>\n            <div v-if=\"isFlipped[team.team_id]\" class=\"player-list mt-3\">\n              <ul class=\"list-group\">\n                <li\n                  v-for=\"player in selectedTeamPlayers[team.team_id]\"\n                  :key=\"player.id\"\n                  @click=\"selectPlayer(player)\"\n                  class=\"list-group-item list-group-item-action\"\n                >\n                  {{ player.full_name }}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TeamsTab',\n  data() {\n    return {\n      teams: [],\n      isFlipped: {},\n      selectedTeamPlayers: {},\n    };\n  },\n  async created() {\n    this.fetchTeams();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get('http://api.mynbaassistant.com/api/teams', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayersByTeam(teamId) {\n      try {\n        const response = await axios.get(`http://api.mynbaassistant.com/api/teams/${teamId}/players`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayersByTeam(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    },\n    selectPlayer(player) {\n      this.$emit('select-player', player);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  background-color: #333;\n  color: #fff;\n}\n\n.card-title, .card-text {\n  color: #fff;\n}\n\n.list-group-item {\n  cursor: pointer;\n  background-color: #2a2a2a;\n  color: #fff;\n}\n\n.list-group-item:hover {\n  background-color: #444;\n}\n\n.player-list {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAA2C;EAAvCD,KAAK,EAAC;AAAkB,GAAC,WAAS;;EACjCA,KAAK,EAAC;AAAK;;EAEPA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;mBAThC;;EAAAE,GAAA;EAagDF,KAAK,EAAC;;;EACpCA,KAAK,EAAC;AAAY;oBAdpC;;uBAEEG,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,UAA2C,EAC3CJ,mBAAA,CAwBM,OAxBNK,UAwBM,I,kBAvBJH,mBAAA,CAsBMI,SAAA,QA3BZC,WAAA,CAK0BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBR,mBAAA,CAsBM;MAtBsBD,GAAG,EAAES,IAAI,CAACC,OAAO;MAAEZ,KAAK,EAAC;QACnDC,mBAAA,CAoBM,OApBNY,UAoBM,GAnBJZ,mBAAA,CAkBM,OAlBNa,UAkBM,GAjBJb,mBAAA,CAA+D,MAA/Dc,UAA+D,EAAAC,gBAAA,CAArCL,IAAI,CAACM,IAAI,IAAG,GAAC,GAAAD,gBAAA,CAAGL,IAAI,CAACO,QAAQ,kBACvDjB,mBAAA,CAAoE,KAApEkB,UAAoE,EAAAH,gBAAA,CAA5CL,IAAI,CAACS,UAAU,IAAG,KAAG,GAAAJ,gBAAA,CAAGL,IAAI,CAACU,QAAQ,kBAC7DpB,mBAAA,CAES;MAFDD,KAAK,EAAC,iBAAiB;MAAEsB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACd,IAAI,CAACC,OAAO;OAAG,gBAElE,iBAZZc,UAAA,GAauBjB,KAAA,CAAAkB,SAAS,CAAChB,IAAI,CAACC,OAAO,K,cAAjCT,mBAAA,CAWM,OAXNyB,UAWM,GAVJ3B,mBAAA,CASK,MATL4B,WASK,I,kBARH1B,mBAAA,CAOKI,SAAA,QAtBrBC,WAAA,CAgBmCC,KAAA,CAAAqB,mBAAmB,CAACnB,IAAI,CAACC,OAAO,GAA1CmB,MAAM;2BADf5B,mBAAA,CAOK;QALFD,GAAG,EAAE6B,MAAM,CAACC,EAAE;QACdV,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAS,YAAY,CAACF,MAAM;QAC3B/B,KAAK,EAAC;0BAEH+B,MAAM,CAACG,SAAS,wBArBrCC,WAAA;0CAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}