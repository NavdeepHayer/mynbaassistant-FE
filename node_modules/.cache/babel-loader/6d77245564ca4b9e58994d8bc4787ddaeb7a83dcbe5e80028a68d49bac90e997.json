{"ast":null,"code":"export default {\n  name: 'PlayerDetails',\n  props: {\n    player: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedSeason: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      gameLogs: [],\n      // This should be populated with data from the backend\n      seasons: [] // This should be populated with data from the backend\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.filteredGameLogs.length / this.itemsPerPage);\n    },\n    paginatedGameLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredGameLogs.slice(start, end);\n    },\n    filteredGameLogs() {\n      if (this.selectedSeason) {\n        return this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      }\n      return this.gameLogs;\n    }\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    filterGameLogs() {\n      this.currentPage = 1;\n    }\n  },\n  async created() {\n    // Fetch game logs and seasons here\n    // this.gameLogs = await fetchGameLogs(this.player.id);\n    // this.seasons = await fetchSeasons();\n  }\n};","map":{"version":3,"names":["name","props","player","type","Object","required","data","selectedSeason","currentPage","itemsPerPage","gameLogs","seasons","computed","totalPages","Math","ceil","filteredGameLogs","length","paginatedGameLogs","start","end","slice","filter","log","season_id","methods","nextPage","prevPage","filterGameLogs","created"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/PlayerDetails.vue"],"sourcesContent":["<template>\n  <div class=\"player-details container-fluid\">\n    <h2 class=\"text-center my-4\">{{ player.full_name }}</h2>\n    <ul class=\"nav nav-tabs justify-content-center\" id=\"playerTabs\" role=\"tablist\">\n      <li class=\"nav-item\">\n        <button class=\"nav-link active\" id=\"game-logs-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#game-logs\" type=\"button\" role=\"tab\" aria-controls=\"game-logs\" aria-selected=\"true\">Game Logs</button>\n      </li>\n      <li class=\"nav-item\">\n        <button class=\"nav-link\" id=\"season-stats-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#season-stats\" type=\"button\" role=\"tab\" aria-controls=\"season-stats\" aria-selected=\"false\">Season Stats</button>\n      </li>\n      <li class=\"nav-item\">\n        <button class=\"nav-link\" id=\"playoff-stats-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#playoff-stats\" type=\"button\" role=\"tab\" aria-controls=\"playoff-stats\" aria-selected=\"false\">Playoff Stats</button>\n      </li>\n    </ul>\n    <div class=\"tab-content\" id=\"playerTabsContent\">\n      <div class=\"tab-pane fade show active\" id=\"game-logs\" role=\"tabpanel\" aria-labelledby=\"game-logs-tab\">\n        <div class=\"table-responsive mt-3\">\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <label for=\"seasonFilter\" class=\"form-label\">Filter by Season:</label>\n            <select id=\"seasonFilter\" class=\"form-select\" v-model=\"selectedSeason\" @change=\"filterGameLogs\">\n              <option v-for=\"season in seasons\" :key=\"season\" :value=\"season\">{{ season }}</option>\n            </select>\n            <div class=\"pagination-controls\">\n              <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"btn btn-secondary btn-sm\">Previous</button>\n              <span>Page {{ currentPage }} of {{ totalPages }}</span>\n              <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"btn btn-secondary btn-sm\">Next</button>\n            </div>\n          </div>\n          <table class=\"table table-dark table-striped\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Matchup</th>\n                <th>WL</th>\n                <th>MIN</th>\n                <th>FGM</th>\n                <th>FGA</th>\n                <th>FG%</th>\n                <th>3PM</th>\n                <th>3PA</th>\n                <th>3P%</th>\n                <th>FTM</th>\n                <th>FTA</th>\n                <th>FT%</th>\n                <th>REB</th>\n                <th>AST</th>\n                <th>STL</th>\n                <th>BLK</th>\n                <th>PTS</th>\n                <th>+/-</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"log in paginatedGameLogs\" :key=\"log.game_id\">\n                <td>{{ log.game_date }}</td>\n                <td>{{ log.matchup }}</td>\n                <td>{{ log.wl }}</td>\n                <td>{{ log.min }}</td>\n                <td>{{ log.fgm }}</td>\n                <td>{{ log.fga }}</td>\n                <td>{{ log.fg_pct }}</td>\n                <td>{{ log.fg3m }}</td>\n                <td>{{ log.fg3a }}</td>\n                <td>{{ log.fg3_pct }}</td>\n                <td>{{ log.ftm }}</td>\n                <td>{{ log.fta }}</td>\n                <td>{{ log.ft_pct }}</td>\n                <td>{{ log.reb }}</td>\n                <td>{{ log.ast }}</td>\n                <td>{{ log.stl }}</td>\n                <td>{{ log.blk }}</td>\n                <td>{{ log.pts }}</td>\n                <td>{{ log.plus_minus }}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"pagination-controls d-flex justify-content-center mt-3\">\n            <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"btn btn-secondary btn-sm me-2\">Previous</button>\n            <span class=\"me-2\">Page {{ currentPage }} of {{ totalPages }}</span>\n            <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"btn btn-secondary btn-sm\">Next</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"tab-pane fade\" id=\"season-stats\" role=\"tabpanel\" aria-labelledby=\"season-stats-tab\">\n        <!-- Season Stats content -->\n      </div>\n      <div class=\"tab-pane fade\" id=\"playoff-stats\" role=\"tabpanel\" aria-labelledby=\"playoff-stats-tab\">\n        <!-- Playoff Stats content -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PlayerDetails',\n  props: {\n    player: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedSeason: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      gameLogs: [], // This should be populated with data from the backend\n      seasons: [] // This should be populated with data from the backend\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.filteredGameLogs.length / this.itemsPerPage);\n    },\n    paginatedGameLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredGameLogs.slice(start, end);\n    },\n    filteredGameLogs() {\n      if (this.selectedSeason) {\n        return this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      }\n      return this.gameLogs;\n    }\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    filterGameLogs() {\n      this.currentPage = 1;\n    }\n  },\n  async created() {\n    // Fetch game logs and seasons here\n    // this.gameLogs = await fetchGameLogs(this.player.id);\n    // this.seasons = await fetchSeasons();\n  }\n};\n</script>\n\n<style scoped>\n.table-responsive {\n  max-width: 100%;\n}\n\n.pagination-controls {\n  display: flex;\n  align-items: center;\n}\n\n.pagination-controls span {\n  margin: 0 10px;\n}\n\n.form-label, .form-select {\n  margin-bottom: 0;\n}\n\nbody {\n  background-color: #1a1a1a; /* Darker background for the entire page */\n  color: #fff; /* Light text color */\n}\n\n.card {\n  background-color: #333;\n  border: none;\n  border-radius: 10px;\n}\n\n.nav-link {\n  color: #fff;\n}\n\n.nav-link.active {\n  background-color: #007bff;\n  color: #fff;\n}\n\n.form-control, .form-select {\n  background-color: #444;\n  color: #fff;\n  border: 1px solid #555;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  border: none;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.table {\n  background-color: #2a2a2a;\n}\n\n.table thead {\n  background-color: #333;\n}\n\n.table thead th {\n  color: #fff;\n}\n\n.table tbody td {\n  color: #fff;\n}\n</style>\n"],"mappings":"AA8FA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MAAE;MACdC,OAAO,EAAE,EAAC,CAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,gBAAgB,CAACC,MAAK,GAAI,IAAI,CAACR,YAAY,CAAC;IACpE,CAAC;IACDS,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACX,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMW,GAAE,GAAID,KAAI,GAAI,IAAI,CAACV,YAAY;MACrC,OAAO,IAAI,CAACO,gBAAgB,CAACK,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAChD,CAAC;IACDJ,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACT,cAAc,EAAE;QACvB,OAAO,IAAI,CAACG,QAAQ,CAACY,MAAM,CAACC,GAAE,IAAKA,GAAG,CAACC,SAAQ,KAAM,IAAI,CAACjB,cAAc,CAAC;MAC3E;MACA,OAAO,IAAI,CAACG,QAAQ;IACtB;EACF,CAAC;EACDe,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAClB,WAAU,GAAI,IAAI,CAACK,UAAU,EAAE;QACtC,IAAI,CAACL,WAAW,EAAE;MACpB;IACF,CAAC;IACDmB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACnB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDoB,cAAcA,CAAA,EAAG;MACf,IAAI,CAACpB,WAAU,GAAI,CAAC;IACtB;EACF,CAAC;EACD,MAAMqB,OAAOA,CAAA,EAAG;IACd;IACA;IACA;EAAA;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}