{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    player: Object\n  },\n  data() {\n    return {\n      activeTab: 'gameLogs',\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: []\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer) {\n          console.log('New player selected:', newPlayer);\n          this.fetchGameLogs();\n          this.fetchSeasonStats();\n          this.fetchPlayoffStats();\n        }\n      }\n    },\n    activeTab(newTab) {\n      console.log('Active tab changed to:', newTab);\n      if (newTab === 'gameLogs') {\n        this.fetchGameLogs();\n      } else if (newTab === 'seasonStats') {\n        this.fetchSeasonStats();\n      } else if (newTab === 'playoffStats') {\n        this.fetchPlayoffStats();\n      }\n    }\n  },\n  methods: {\n    async fetchGameLogs() {\n      if (this.activeTab !== 'gameLogs' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/games`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.gameLogs = response.data;\n        console.log('Fetched game logs:', this.gameLogs);\n      } catch (error) {\n        console.error('Error fetching game logs:', error);\n      }\n    },\n    async fetchSeasonStats() {\n      if (this.activeTab !== 'seasonStats' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/seasonstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasonStats = response.data;\n        console.log('Fetched season stats:', this.seasonStats);\n      } catch (error) {\n        console.error('Error fetching season stats:', error);\n      }\n    },\n    async fetchPlayoffStats() {\n      if (this.activeTab !== 'playoffStats' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/playoffstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.playoffStats = response.data;\n        console.log('Fetched playoff stats:', this.playoffStats);\n      } catch (error) {\n        console.error('Error fetching playoff stats:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","player","Object","data","activeTab","gameLogs","seasonStats","playoffStats","watch","immediate","handler","newPlayer","console","log","fetchGameLogs","fetchSeasonStats","fetchPlayoffStats","newTab","methods","response","get","id","headers","Authorization","localStorage","getItem","error"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/PlayerDetails.vue"],"sourcesContent":["<template>\n  <div v-if=\"player\" class=\"player-details\">\n    <h2>{{ player.full_name }}</h2>\n    <div class=\"player-info\">\n      <p><strong>First Name:</strong> {{ player.first_name }}</p>\n      <p><strong>Last Name:</strong> {{ player.last_name }}</p>\n      <p><strong>Active:</strong> {{ player.is_active ? 'Yes' : 'No' }}</p>\n    </div>\n\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'gameLogs' }\" @click=\"activeTab = 'gameLogs'\">Game Logs</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'seasonStats' }\" @click=\"activeTab = 'seasonStats'\">Season Stats</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" :class=\"{ active: activeTab === 'playoffStats' }\" @click=\"activeTab = 'playoffStats'\">Playoff Stats</a>\n      </li>\n    </ul>\n\n    <div v-if=\"activeTab === 'gameLogs'\">\n      <h3>Game Logs</h3>\n      <table v-if=\"gameLogs.length\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Matchup</th>\n            <th>Points</th>\n            <th>Assists</th>\n            <th>Rebounds</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"log in gameLogs\" :key=\"log.game_id\">\n            <td>{{ log.game_date }}</td>\n            <td>{{ log.matchup }}</td>\n            <td>{{ log.pts }}</td>\n            <td>{{ log.ast }}</td>\n            <td>{{ log.reb }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>No game logs available.</p>\n    </div>\n\n    <div v-if=\"activeTab === 'seasonStats'\">\n      <h3>Season Stats</h3>\n      <table v-if=\"seasonStats.length\">\n        <thead>\n          <tr>\n            <th>Season</th>\n            <th>Team</th>\n            <th>GP</th>\n            <th>GS</th>\n            <th>MIN</th>\n            <th>PTS</th>\n            <th>REB</th>\n            <th>AST</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"stat in seasonStats\" :key=\"stat.season_id\">\n            <td>{{ stat.season_id }}</td>\n            <td>{{ stat.team_id }}</td>\n            <td>{{ stat.gp }}</td>\n            <td>{{ stat.gs }}</td>\n            <td>{{ stat.min }}</td>\n            <td>{{ stat.pts }}</td>\n            <td>{{ stat.reb }}</td>\n            <td>{{ stat.ast }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>No season stats available.</p>\n    </div>\n\n    <div v-if=\"activeTab === 'playoffStats'\">\n      <h3>Playoff Stats</h3>\n      <table v-if=\"playoffStats.length\">\n        <thead>\n          <tr>\n            <th>Season</th>\n            <th>Team</th>\n            <th>GP</th>\n            <th>GS</th>\n            <th>MIN</th>\n            <th>PTS</th>\n            <th>REB</th>\n            <th>AST</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"stat in playoffStats\" :key=\"stat.season_id\">\n            <td>{{ stat.season_id }}</td>\n            <td>{{ stat.team_id }}</td>\n            <td>{{ stat.gp }}</td>\n            <td>{{ stat.gs }}</td>\n            <td>{{ stat.min }}</td>\n            <td>{{ stat.pts }}</td>\n            <td>{{ stat.reb }}</td>\n            <td>{{ stat.ast }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>No playoff stats available.</p>\n    </div>\n  </div>\n  <div v-else class=\"player-details\">\n    <p>Please select a player to see details.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    player: Object,\n  },\n  data() {\n    return {\n      activeTab: 'gameLogs',\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: []\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer) {\n          console.log('New player selected:', newPlayer);\n          this.fetchGameLogs();\n          this.fetchSeasonStats();\n          this.fetchPlayoffStats();\n        }\n      }\n    },\n    activeTab(newTab) {\n      console.log('Active tab changed to:', newTab);\n      if (newTab === 'gameLogs') {\n        this.fetchGameLogs();\n      } else if (newTab === 'seasonStats') {\n        this.fetchSeasonStats();\n      } else if (newTab === 'playoffStats') {\n        this.fetchPlayoffStats();\n      }\n    }\n  },\n  methods: {\n    async fetchGameLogs() {\n      if (this.activeTab !== 'gameLogs' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/games`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.gameLogs = response.data;\n        console.log('Fetched game logs:', this.gameLogs);\n      } catch (error) {\n        console.error('Error fetching game logs:', error);\n      }\n    },\n    async fetchSeasonStats() {\n      if (this.activeTab !== 'seasonStats' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/seasonstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.seasonStats = response.data;\n        console.log('Fetched season stats:', this.seasonStats);\n      } catch (error) {\n        console.error('Error fetching season stats:', error);\n      }\n    },\n    async fetchPlayoffStats() {\n      if (this.activeTab !== 'playoffStats' || !this.player) return;\n      try {\n        const response = await axios.get(`/api/players/${this.player.id}/playoffstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.playoffStats = response.data;\n        console.log('Fetched playoff stats:', this.playoffStats);\n      } catch (error) {\n        console.error('Error fetching playoff stats:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.player-details {\n  padding: 20px;\n}\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\nth, td {\n  padding: 10px;\n  border: 1px solid #ccc;\n  text-align: left;\n}\n.nav-tabs .nav-link {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}