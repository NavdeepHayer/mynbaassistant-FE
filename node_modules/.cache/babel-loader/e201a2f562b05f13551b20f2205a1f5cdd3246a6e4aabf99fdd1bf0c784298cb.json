{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AuthPage',\n  data() {\n    return {\n      activeTab: 'login',\n      loginEmail: '',\n      loginPassword: '',\n      registerEmail: '',\n      registerPassword: '',\n      registerEmailError: '',\n      registerPasswordError: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      // Placeholder for login logic\n      console.log('Login with', this.loginEmail, this.loginPassword);\n      this.$emit('login');\n      this.$router.push('/home');\n    },\n    async handleRegister() {\n      this.clearErrors();\n      if (!this.validateRegisterForm()) {\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.registerEmail,\n            password: this.registerPassword\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result.msg);\n          this.$emit('login');\n          this.$router.push('/home');\n        } else {\n          const error = await response.json();\n          console.error(error.detail);\n          alert(error.detail);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred. Please try again.');\n      }\n    },\n    validateRegisterForm() {\n      let isValid = true;\n      if (!this.registerEmail) {\n        this.registerEmailError = 'Email is required';\n        isValid = false;\n      } else if (!this.isValidEmail(this.registerEmail)) {\n        this.registerEmailError = 'Invalid email address';\n        isValid = false;\n      }\n      if (!this.registerPassword) {\n        this.registerPasswordError = 'Password is required';\n        isValid = false;\n      } else if (this.registerPassword.length < 6) {\n        this.registerPasswordError = 'Password must be at least 6 characters';\n        isValid = false;\n      }\n      return isValid;\n    },\n    isValidEmail(email) {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return re.test(email);\n    },\n    clearErrors() {\n      this.registerEmailError = '';\n      this.registerPasswordError = '';\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeTab","loginEmail","loginPassword","registerEmail","registerPassword","registerEmailError","registerPasswordError","methods","handleLogin","console","log","$emit","$router","push","handleRegister","clearErrors","validateRegisterForm","response","fetch","method","headers","body","JSON","stringify","email","password","ok","result","json","msg","error","detail","alert","isValid","isValidEmail","length","re","test"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/AuthPage.vue"],"sourcesContent":["<template>\n    <div class=\"auth-container\">\n      <div class=\"logo-container text-center mb-4\">\n        <img src=\"@/assets/logo.png\" alt=\"NBA Stats App Logo\" class=\"logo\">\n      </div>\n      <h2 class=\"text-center mb-4\">Welcome to NBA Stats App</h2>\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <ul class=\"nav nav-tabs card-header-tabs justify-content-center\">\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link\"\n                :class=\"{ active: activeTab === 'login' }\"\n                @click=\"activeTab = 'login'\"\n                href=\"#\"\n                >Login</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link\"\n                :class=\"{ active: activeTab === 'register' }\"\n                @click=\"activeTab = 'register'\"\n                href=\"#\"\n                >Register</a\n              >\n            </li>\n          </ul>\n        </div>\n        <div class=\"card-body\">\n          <div v-if=\"activeTab === 'login'\">\n            <h3>Login</h3>\n            <form @submit.prevent=\"handleLogin\">\n              <div class=\"form-group\">\n                <label for=\"login-email\">Email:</label>\n                <input\n                  type=\"email\"\n                  v-model=\"loginEmail\"\n                  id=\"login-email\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"login-password\">Password:</label>\n                <input\n                  type=\"password\"\n                  v-model=\"loginPassword\"\n                  id=\"login-password\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                Login\n              </button>\n            </form>\n          </div>\n          <div v-if=\"activeTab === 'register'\">\n            <h3>Register</h3>\n            <form @submit.prevent=\"handleRegister\">\n              <div class=\"form-group\">\n                <label for=\"register-email\">Email:</label>\n                <input\n                  type=\"email\"\n                  v-model=\"registerEmail\"\n                  id=\"register-email\"\n                  class=\"form-control\"\n                  required\n                />\n                <div v-if=\"registerEmailError\" class=\"text-danger\">\n                  {{ registerEmailError }}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"register-password\">Password:</label>\n                <input\n                  type=\"password\"\n                  v-model=\"registerPassword\"\n                  id=\"register-password\"\n                  class=\"form-control\"\n                  required\n                />\n                <div v-if=\"registerPasswordError\" class=\"text-danger\">\n                  {{ registerPasswordError }}\n                </div>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                Register\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'AuthPage',\n    data() {\n      return {\n        activeTab: 'login',\n        loginEmail: '',\n        loginPassword: '',\n        registerEmail: '',\n        registerPassword: '',\n        registerEmailError: '',\n        registerPasswordError: ''\n      };\n    },\n    methods: {\n      async handleLogin() {\n        // Placeholder for login logic\n        console.log('Login with', this.loginEmail, this.loginPassword);\n        this.$emit('login');\n        this.$router.push('/home');\n      },\n      async handleRegister() {\n        this.clearErrors();\n        if (!this.validateRegisterForm()) {\n          return;\n        }\n  \n        try {\n          const response = await fetch('http://localhost:8000/api/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              email: this.registerEmail,\n              password: this.registerPassword,\n            }),\n          });\n  \n          if (response.ok) {\n            const result = await response.json();\n            console.log(result.msg);\n            this.$emit('login');\n            this.$router.push('/home');\n          } else {\n            const error = await response.json();\n            console.error(error.detail);\n            alert(error.detail);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred. Please try again.');\n        }\n      },\n      validateRegisterForm() {\n        let isValid = true;\n  \n        if (!this.registerEmail) {\n          this.registerEmailError = 'Email is required';\n          isValid = false;\n        } else if (!this.isValidEmail(this.registerEmail)) {\n          this.registerEmailError = 'Invalid email address';\n          isValid = false;\n        }\n  \n        if (!this.registerPassword) {\n          this.registerPasswordError = 'Password is required';\n          isValid = false;\n        } else if (this.registerPassword.length < 6) {\n          this.registerPasswordError = 'Password must be at least 6 characters';\n          isValid = false;\n        }\n  \n        return isValid;\n      },\n      isValidEmail(email) {\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return re.test(email);\n      },\n      clearErrors() {\n        this.registerEmailError = '';\n        this.registerPasswordError = '';\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .auth-container {\n    max-width: 500px;\n    margin: 50px auto;\n    padding: 20px;\n  }\n  \n  .logo-container {\n    text-align: center;\n  }\n  \n  .logo {\n    width: 100px;\n  }\n  \n  .card {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .card-header {\n    background-color: #f8f9fa;\n    padding: 0;\n    border-bottom: none;\n  }\n  \n  .nav-tabs {\n    border-bottom: 1px solid #dee2e6;\n  }\n  \n  .nav-tabs .nav-link {\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    color: #007bff;\n    padding: 10px;\n  }\n  \n  .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n    color: #495057;\n    background-color: #fff;\n    border-color: #dee2e6 #dee2e6 #fff;\n  }\n  \n  .card-body {\n    padding: 20px;\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  .btn-block {\n    display: block;\n    width: 100%;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}