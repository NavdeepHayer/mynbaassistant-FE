{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PlayerDetails',\n  props: {\n    player: Object\n  },\n  data() {\n    return {\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      selectedSeason: null,\n      seasons: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      activeTab: 'regular-season'\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer && newPlayer.id) {\n          this.fetchPlayerData(newPlayer.id);\n          this.fetchSeasons();\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchPlayerData(playerId) {\n      try {\n        const gameLogsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/games`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.gameLogs = gameLogsResponse.data;\n        const seasonStatsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/seasonstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasonStats = seasonStatsResponse.data;\n        const playoffStatsResponse = await axios.get(`http://192.168.50.157:8000/api/players/${playerId}/playoffstats`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.playoffStats = playoffStatsResponse.data;\n      } catch (error) {\n        this.gameLogs = [];\n        this.seasonStats = [];\n        this.playoffStats = [];\n      }\n    },\n    async fetchSeasons() {\n      try {\n        const response = await axios.get('http://192.168.50.157:8000/api/seasons', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.seasons = response.data;\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    },\n    filterGameLogs() {\n      if (this.selectedSeason) {\n        this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      } else {\n        this.filteredGameLogs = this.gameLogs;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.gameLogs.length / this.itemsPerPage);\n    },\n    paginatedGameLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.gameLogs.slice(start, end);\n    },\n    filteredGameLogs() {\n      return this.gameLogs.filter(log => log.min != null);\n    },\n    filteredSeasonStats() {\n      return this.seasonStats.filter(stat => stat.min != null);\n    },\n    filteredPlayoffStats() {\n      return this.playoffStats.filter(stat => stat.min != null);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","player","Object","data","gameLogs","seasonStats","playoffStats","selectedSeason","seasons","currentPage","itemsPerPage","activeTab","watch","immediate","handler","newPlayer","id","fetchPlayerData","fetchSeasons","methods","playerId","gameLogsResponse","get","headers","Authorization","localStorage","getItem","seasonStatsResponse","playoffStatsResponse","error","response","console","filterGameLogs","filteredGameLogs","filter","log","season_id","nextPage","totalPages","prevPage","computed","Math","ceil","length","paginatedGameLogs","start","end","slice","min","filteredSeasonStats","stat","filteredPlayoffStats"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/PlayerDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>{{ player.full_name }}</h2>\n    <ul class=\"nav nav-tabs mt-4\" id=\"gameLogTabs\" role=\"tablist\">\n      <li class=\"nav-item\" role=\"presentation\">\n        <button\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'regular-season' }\"\n          id=\"regular-season-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#regular-season\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"regular-season\"\n          aria-selected=\"activeTab === 'regular-season'\"\n          @click=\"activeTab = 'regular-season'\"\n        >\n          Game Logs\n        </button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'season-stats' }\"\n          id=\"season-stats-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#season-stats\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"season-stats\"\n          aria-selected=\"activeTab === 'season-stats'\"\n          @click=\"activeTab = 'season-stats'\"\n        >\n          Season Stats\n        </button>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <button\n          class=\"nav-link\"\n          :class=\"{ active: activeTab === 'playoffs' }\"\n          id=\"playoffs-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#playoffs\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"playoffs\"\n          aria-selected=\"activeTab === 'playoffs'\"\n          @click=\"activeTab = 'playoffs'\"\n        >\n          Playoff Stats\n        </button>\n      </li>\n    </ul>\n    <div class=\"tab-content mt-2\" id=\"gameLogTabsContent\">\n      <div class=\"tab-pane fade\" :class=\"{ 'show active': activeTab === 'regular-season' }\" id=\"regular-season\" role=\"tabpanel\" aria-labelledby=\"regular-season-tab\">\n        <div class=\"table-responsive\">\n          <div class=\"filters mb-3\">\n            <label for=\"seasonFilter\">Filter by Season:</label>\n            <select\n              id=\"seasonFilter\"\n              class=\"form-control\"\n              v-model=\"selectedSeason\"\n              @change=\"filterGameLogs\"\n            >\n              <option v-for=\"season in seasons\" :key=\"season\" :value=\"season\">\n                {{ season }}\n              </option>\n            </select>\n          </div>\n          <h3>Game Logs</h3>\n          <table class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th>Date</th>\n                <th>Matchup</th>\n                <th>WL</th>\n                <th>MIN</th>\n                <th>FGM</th>\n                <th>FGA</th>\n                <th>FG%</th>\n                <th>3PM</th>\n                <th>3PA</th>\n                <th>3P%</th>\n                <th>FTM</th>\n                <th>FTA</th>\n                <th>FT%</th>\n                <th>REB</th>\n                <th>AST</th>\n                <th>STL</th>\n                <th>BLK</th>\n                <th>PTS</th>\n                <th>+/-</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"log in paginatedGameLogs\" :key=\"log.game_id\">\n                <td>{{ log.game_date }}</td>\n                <td>{{ log.matchup }}</td>\n                <td>{{ log.wl }}</td>\n                <td>{{ log.min }}</td>\n                <td>{{ log.fgm }}</td>\n                <td>{{ log.fga }}</td>\n                <td>{{ log.fg_pct }}</td>\n                <td>{{ log.fg3m }}</td>\n                <td>{{ log.fg3a }}</td>\n                <td>{{ log.fg3_pct }}</td>\n                <td>{{ log.ftm }}</td>\n                <td>{{ log.fta }}</td>\n                <td>{{ log.ft_pct }}</td>\n                <td>{{ log.reb }}</td>\n                <td>{{ log.ast }}</td>\n                <td>{{ log.stl }}</td>\n                <td>{{ log.blk }}</td>\n                <td>{{ log.pts }}</td>\n                <td>{{ log.plus_minus }}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"pagination\">\n            <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\n            <span>Page {{ currentPage }} of {{ totalPages }}</span>\n            <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"tab-pane fade\" :class=\"{ 'show active': activeTab === 'season-stats' }\" id=\"season-stats\" role=\"tabpanel\" aria-labelledby=\"season-stats-tab\">\n        <div class=\"table-responsive\">\n          <h3>Season Stats</h3>\n          <table class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th>Season</th>\n                <th>Team</th>\n                <th>GP</th>\n                <th>GS</th>\n                <th>MIN</th>\n                <th>FGM</th>\n                <th>FGA</th>\n                <th>FG%</th>\n                <th>3PM</th>\n                <th>3PA</th>\n                <th>3P%</th>\n                <th>FTM</th>\n                <th>FTA</th>\n                <th>FT%</th>\n                <th>OREB</th>\n                <th>DREB</th>\n                <th>REB</th>\n                <th>AST</th>\n                <th>STL</th>\n                <th>BLK</th>\n                <th>TOV</th>\n                <th>PF</th>\n                <th>PTS</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"stat in filteredSeasonStats\" :key=\"stat.season_id\">\n                <td>{{ stat.season_id }}</td>\n                <td>{{ stat.team_id }}</td>\n                <td>{{ stat.gp }}</td>\n                <td>{{ stat.gs }}</td>\n                <td>{{ stat.min }}</td>\n                <td>{{ stat.fgm }}</td>\n                <td>{{ stat.fga }}</td>\n                <td>{{ stat.fg_pct }}</td>\n                <td>{{ stat.fg3m }}</td>\n                <td>{{ stat.fg3a }}</td>\n                <td>{{ stat.fg3_pct }}</td>\n                <td>{{ stat.ftm }}</td>\n                <td>{{ stat.fta }}</td>\n                <td>{{ stat.ft_pct }}</td>\n                <td>{{ stat.oreb }}</td>\n                <td>{{ stat.dreb }}</td>\n                <td>{{ stat.reb }}</td>\n                <td>{{ stat.ast }}</td>\n                <td>{{ stat.stl }}</td>\n                <td>{{ stat.blk }}</td>\n                <td>{{ stat.tov }}</td>\n                <td>{{ stat.pf }}</td>\n                <td>{{ stat.pts }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"tab-pane fade\" :class=\"{ 'show active': activeTab === 'playoffs' }\" id=\"playoffs\" role=\"tabpanel\" aria-labelledby=\"playoffs-tab\">\n        <div class=\"table-responsive\">\n          <h3>Playoff Stats</h3>\n          <table class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th>Season</th>\n                <th>Team</th>\n                <th>GP</th>\n                <th>GS</th>\n                <th>MIN</th>\n                <th>FGM</th>\n                <th>FGA</th>\n                <th>FG%</th>\n                <th>3PM</th>\n                <th>3PA</th>\n                <th>3P%</th>\n                <th>FTM</th>\n                <th>FTA</th>\n                <th>FT%</th>\n                <th>OREB</th>\n                <th>DREB</th>\n                <th>REB</th>\n                <th>AST</th>\n                <th>STL</th>\n                <th>BLK</th>\n                <th>TOV</th>\n                <th>PF</th>\n                <th>PTS</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"stat in filteredPlayoffStats\" :key=\"stat.season_id\">\n                <td>{{ stat.season_id }}</td>\n                <td>{{ stat.team_id }}</td>\n                <td>{{ stat.gp }}</td>\n                <td>{{ stat.gs }}</td>\n                <td>{{ stat.min }}</td>\n                <td>{{ stat.fgm }}</td>\n                <td>{{ stat.fga }}</td>\n                <td>{{ stat.fg_pct }}</td>\n                <td>{{ stat.fg3m }}</td>\n                <td>{{ stat.fg3a }}</td>\n                <td>{{ stat.fg3_pct }}</td>\n                <td>{{ stat.ftm }}</td>\n                <td>{{ stat.fta }}</td>\n                <td>{{ stat.ft_pct }}</td>\n                <td>{{ stat.oreb }}</td>\n                <td>{{ stat.dreb }}</td>\n                <td>{{ stat.reb }}</td>\n                <td>{{ stat.ast }}</td>\n                <td>{{ stat.stl }}</td>\n                <td>{{ stat.blk }}</td>\n                <td>{{ stat.tov }}</td>\n                <td>{{ stat.pf }}</td>\n                <td>{{ stat.pts }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'PlayerDetails',\n  props: {\n    player: Object,\n  },\n  data() {\n    return {\n      gameLogs: [],\n      seasonStats: [],\n      playoffStats: [],\n      selectedSeason: null,\n      seasons: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      activeTab: 'regular-season',\n    };\n  },\n  watch: {\n    player: {\n      immediate: true,\n      handler(newPlayer) {\n        if (newPlayer && newPlayer.id) {\n          this.fetchPlayerData(newPlayer.id);\n          this.fetchSeasons();\n        }\n      },\n    },\n  },\n  methods: {\n    async fetchPlayerData(playerId) {\n      try {\n        const gameLogsResponse = await axios.get(\n          `http://192.168.50.157:8000/api/players/${playerId}/games`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          }\n        );\n        this.gameLogs = gameLogsResponse.data;\n\n        const seasonStatsResponse = await axios.get(\n          `http://192.168.50.157:8000/api/players/${playerId}/seasonstats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          }\n        );\n        this.seasonStats = seasonStatsResponse.data;\n\n        const playoffStatsResponse = await axios.get(\n          `http://192.168.50.157:8000/api/players/${playerId}/playoffstats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          }\n        );\n        this.playoffStats = playoffStatsResponse.data;\n      } catch (error) {\n        this.gameLogs = [];\n        this.seasonStats = [];\n        this.playoffStats = [];\n      }\n    },\n    async fetchSeasons() {\n      try {\n        const response = await axios.get('http://192.168.50.157:8000/api/seasons', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        this.seasons = response.data;\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    },\n    filterGameLogs() {\n      if (this.selectedSeason) {\n        this.filteredGameLogs = this.gameLogs.filter(log => log.season_id === this.selectedSeason);\n      } else {\n        this.filteredGameLogs = this.gameLogs;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.gameLogs.length / this.itemsPerPage);\n    },\n    paginatedGameLogs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.gameLogs.slice(start, end);\n    },\n    filteredGameLogs() {\n      return this.gameLogs.filter(log => log.min != null);\n    },\n    filteredSeasonStats() {\n      return this.seasonStats.filter(stat => stat.min != null);\n    },\n    filteredPlayoffStats() {\n      return this.playoffStats.filter(stat => stat.min != null);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.table-responsive {\n  max-width: 100%;\n}\n\n.filters {\n  margin-bottom: 20px;\n}\n\n.filters label {\n  margin-right: 10px;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n}\n\n.pagination button {\n  margin: 0 5px;\n}\n\n.nav-tabs {\n  background-color: #333;\n}\n\n.nav-link {\n  color: #fff;\n}\n\n.nav-link.active {\n  background-color: #007bff;\n  color: #fff;\n  border-color: #007bff;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}