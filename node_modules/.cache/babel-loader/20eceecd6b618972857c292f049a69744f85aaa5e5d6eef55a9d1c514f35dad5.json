{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c6bdc170\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home-page container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center my-4\"\n}, \"NBA Teams\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"front\"\n};\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"card-title\"\n};\nconst _hoisted_8 = {\n  class: \"card-text\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"back\"\n};\nconst _hoisted_10 = {\n  class: \"card-body\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Players\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.teams, team => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: team.team_id,\n      class: \"col-md-4 mb-4\"\n    }, [_createElementVNode(\"div\", {\n      class: \"card-container\",\n      onClick: $event => $options.toggleCard(team.team_id)\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass(['card', {\n        'flipped': $data.isFlipped[team.team_id]\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h5\", _hoisted_7, _toDisplayString(team.city) + \" \" + _toDisplayString(team.nickname), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(team.conference) + \" - \" + _toDisplayString(team.division), 1 /* TEXT */)])]), $data.selectedTeamPlayers[team.team_id] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedTeamPlayers[team.team_id], player => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: player.id\n      }, _toDisplayString(player.full_name), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)], 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","teams","team","team_id","onClick","$event","$options","toggleCard","_normalizeClass","isFlipped","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","city","nickname","_hoisted_8","conference","division","selectedTeamPlayers","_hoisted_9","_hoisted_10","_hoisted_11","player","id","full_name","_createCommentVNode","_hoisted_4"],"sources":["/home/nav/Desktop/NBA api/frontend/nba-stats-app/src/views/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"home-page container\">\n    <h2 class=\"text-center my-4\">NBA Teams</h2>\n    <div class=\"row\">\n      <div v-for=\"team in teams\" :key=\"team.team_id\" class=\"col-md-4 mb-4\">\n        <div class=\"card-container\" @click=\"toggleCard(team.team_id)\">\n          <div :class=\"['card', { 'flipped': isFlipped[team.team_id] }]\">\n            <div class=\"front\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ team.city }} {{ team.nickname }}</h5>\n                <p class=\"card-text\">{{ team.conference }} - {{ team.division }}</p>\n              </div>\n            </div>\n            <div class=\"back\" v-if=\"selectedTeamPlayers[team.team_id]\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Players</h5>\n                <ul>\n                  <li v-for=\"player in selectedTeamPlayers[team.team_id]\" :key=\"player.id\">\n                    {{ player.full_name }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      teams: [],\n      selectedTeamPlayers: {},\n      isFlipped: {}\n    };\n  },\n  created() {\n    this.fetchTeams();\n  },\n  methods: {\n    async fetchTeams() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/teams');\n        this.teams = response.data;\n      } catch (error) {\n        console.error('Error fetching NBA teams:', error);\n      }\n    },\n    async fetchPlayers(teamId) {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/teams/${teamId}/players`);\n        this.$set(this.selectedTeamPlayers, teamId, response.data);\n      } catch (error) {\n        console.error('Error fetching players for the team:', error);\n      }\n    },\n    async toggleCard(teamId) {\n      if (!this.selectedTeamPlayers[teamId]) {\n        await this.fetchPlayers(teamId);\n      }\n      this.$set(this.isFlipped, teamId, !this.isFlipped[teamId]);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.card-container {\n  perspective: 1000px;\n}\n\n.card {\n  width: 100%;\n  height: 100%;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  position: relative;\n}\n\n.flipped {\n  transform: rotateY(180deg);\n}\n\n.card .front, .card .back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.card .back {\n  transform: rotateY(180deg);\n}\n\n.card-title {\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.card-text, .card-body ul {\n  font-size: 1rem;\n  color: #666;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAA2C;EAAvCD,KAAK,EAAC;AAAkB,GAAC,WAAS;;EACjCA,KAAK,EAAC;AAAK;mBAHpB;;EAOiBA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;;EAVpCE,GAAA;EAaiBF,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAW;iEACpBC,mBAAA,CAAmC;EAA/BD,KAAK,EAAC;AAAY,GAAC,SAAO;;uBAd5CG,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,UAA2C,EAC3CJ,mBAAA,CAuBM,OAvBNK,UAuBM,I,kBAtBJH,mBAAA,CAqBMI,SAAA,QAzBZC,WAAA,CAI0BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBR,mBAAA,CAqBM;MArBsBD,GAAG,EAAES,IAAI,CAACC,OAAO;MAAEZ,KAAK,EAAC;QACnDC,mBAAA,CAmBM;MAnBDD,KAAK,EAAC,gBAAgB;MAAEa,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACL,IAAI,CAACC,OAAO;QACzDX,mBAAA,CAiBM;MAjBAD,KAAK,EANrBiB,eAAA;QAAA,WAM6CR,KAAA,CAAAS,SAAS,CAACP,IAAI,CAACC,OAAO;MAAA;QACvDX,mBAAA,CAKM,OALNkB,UAKM,GAJJlB,mBAAA,CAGM,OAHNmB,UAGM,GAFJnB,mBAAA,CAA+D,MAA/DoB,UAA+D,EAAAC,gBAAA,CAArCX,IAAI,CAACY,IAAI,IAAG,GAAC,GAAAD,gBAAA,CAAGX,IAAI,CAACa,QAAQ,kBACvDvB,mBAAA,CAAoE,KAApEwB,UAAoE,EAAAH,gBAAA,CAA5CX,IAAI,CAACe,UAAU,IAAG,KAAG,GAAAJ,gBAAA,CAAGX,IAAI,CAACgB,QAAQ,iB,KAGzClB,KAAA,CAAAmB,mBAAmB,CAACjB,IAAI,CAACC,OAAO,K,cAAxDT,mBAAA,CASM,OATN0B,UASM,GARJ5B,mBAAA,CAOM,OAPN6B,WAOM,GANJC,WAAmC,EACnC9B,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKI,SAAA,QAnBvBC,WAAA,CAiBuCC,KAAA,CAAAmB,mBAAmB,CAACjB,IAAI,CAACC,OAAO,GAA1CoB,MAAM;2BAAjB7B,mBAAA,CAEK;QAFoDD,GAAG,EAAE8B,MAAM,CAACC;0BAChED,MAAM,CAACE,SAAS;4CAlBvCC,mBAAA,e,kCAAAC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}